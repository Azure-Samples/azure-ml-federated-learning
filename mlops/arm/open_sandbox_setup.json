{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "6599410893352774755"
    }
  },
  "parameters": {
    "demoBaseName": {
      "type": "string",
      "defaultValue": "fldemo",
      "metadata": {
        "description": "Base name of the demo, used for creating all resources as prefix"
      }
    },
    "identityType": {
      "type": "string",
      "defaultValue": "UserAssigned",
      "metadata": {
        "description": "Type of identity to use for permissions model"
      },
      "allowedValues": [
        "UserAssigned",
        "SystemAssigned"
      ]
    },
    "orchestratorRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Region of the orchestrator (workspace, central storage and compute)."
      }
    },
    "siloRegions": {
      "type": "array",
      "defaultValue": [
        "westus",
        "francecentral",
        "brazilsouth"
      ],
      "metadata": {
        "description": "List of each region in which to create an internal silo."
      }
    },
    "computeSKU": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "The VM used for creating compute clusters in orchestrator and silos."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Owner": "AzureML Samples",
        "Project": "azure-ml-federated-learning",
        "Environment": "dev",
        "Toolkit": "bicep",
        "Docs": "https://github.com/Azure-Samples/azure-ml-federated-learning"
      },
      "metadata": {
        "description": "Tags to curate the resources in Azure."
      }
    }
  },
  "variables": {
    "siloCount": "[length(parameters('siloRegions'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "baseName": {
            "value": "[parameters('demoBaseName')]"
          },
          "machineLearningName": {
            "value": "[format('aml-{0}', parameters('demoBaseName'))]"
          },
          "machineLearningDescription": {
            "value": "Azure ML demo workspace for federated learning (use for dev purpose only)"
          },
          "location": {
            "value": "[parameters('orchestratorRegion')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "2700657795304116427"
            }
          },
          "parameters": {
            "baseName": {
              "type": "string",
              "maxLength": 20,
              "minLength": 2,
              "metadata": {
                "description": "Base name to create all the resources"
              }
            },
            "machineLearningName": {
              "type": "string",
              "defaultValue": "[format('aml-{0}', parameters('baseName'))]",
              "metadata": {
                "description": "Machine learning workspace name"
              }
            },
            "machineLearningFriendlyName": {
              "type": "string",
              "defaultValue": "Sandbox workspace",
              "metadata": {
                "description": "Machine learning workspace display name"
              }
            },
            "machineLearningDescription": {
              "type": "string",
              "defaultValue": "An open AzureML workspace with no specific security settings.",
              "metadata": {
                "description": "Machine learning workspace description"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the location of the Azure Machine Learning workspace and dependent resources."
              }
            },
            "hbiWorkspace": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Specifies whether to reduce telemetry collection and enable additional encryption."
              }
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": "[format('appi-{0}', parameters('baseName'))]",
              "metadata": {
                "description": "Name of the application insights resource"
              }
            },
            "containerRegistryName": {
              "type": "string",
              "defaultValue": "[replace(format('cr-{0}', parameters('baseName')), '-', '')]",
              "metadata": {
                "description": "Name of the container registry resource"
              }
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "[format('kv-{0}', parameters('baseName'))]",
              "metadata": {
                "description": "Name of the key vault resource"
              }
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": "[replace(format('st-{0}', parameters('baseName')), '-', '')]",
              "metadata": {
                "description": "Name of the storage account resource"
              }
            },
            "defaultComputeName": {
              "type": "string",
              "defaultValue": "cpu-cluster",
              "metadata": {
                "description": "Name of the default compute cluster in orchestrator"
              }
            },
            "defaultComputeSKU": {
              "type": "string",
              "defaultValue": "Standard_DS3_v2",
              "metadata": {
                "description": "VM size for the default compute cluster"
              }
            },
            "defaultComputeNodes": {
              "type": "int",
              "defaultValue": 4,
              "metadata": {
                "description": "VM nodes for the default compute cluster"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to curate the resources in Azure."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "encryption": {
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "supportsHttpsTrafficOnly": true
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "accessPolicies": [],
                "enableSoftDelete": true
              }
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-09-01",
              "name": "[parameters('containerRegistryName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "adminUserEnabled": true
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[if(or(equals(parameters('location'), 'eastus2'), equals(parameters('location'), 'westcentralus')), 'southcentralus', parameters('location'))]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web"
              }
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2022-05-01",
              "name": "[parameters('machineLearningName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "friendlyName": "[parameters('machineLearningFriendlyName')]",
                "description": "[parameters('machineLearningDescription')]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "keyVault": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "applicationInsights": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
                "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
                "hbiWorkspace": "[parameters('hbiWorkspace')]",
                "publicNetworkAccess": "Enabled",
                "imageBuildCompute": "[parameters('defaultComputeName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces/computes",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('defaultComputeName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "computeType": "AmlCompute",
                "computeLocation": "[parameters('location')]",
                "description": "default cluster",
                "disableLocalAuth": true,
                "properties": {
                  "vmPriority": "Dedicated",
                  "vmSize": "[parameters('defaultComputeSKU')]",
                  "enableNodePublicIp": true,
                  "isolatedNetwork": false,
                  "osType": "Linux",
                  "remoteLoginPortPublicAccess": "NotSpecified",
                  "scaleSettings": {
                    "maxNodeCount": "[parameters('defaultComputeNodes')]",
                    "minNodeCount": 0,
                    "nodeIdleTimeBeforeScaleDown": "PT300S"
                  },
                  "subnet": "[json('null')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName'))]"
              ]
            }
          ],
          "outputs": {
            "storageName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "computeName": {
              "type": "string",
              "value": "[format('{0}/{1}', parameters('machineLearningName'), parameters('defaultComputeName'))]"
            },
            "workspaceName": {
              "type": "string",
              "value": "[parameters('machineLearningName')]"
            },
            "region": {
              "type": "string",
              "value": "[parameters('location')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-openpair-orchestrator', parameters('demoBaseName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "machineLearningName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))), '2020-10-01').outputs.workspaceName.value]"
          },
          "machineLearningRegion": {
            "value": "[parameters('orchestratorRegion')]"
          },
          "pairRegion": {
            "value": "[parameters('orchestratorRegion')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "pairBaseName": {
            "value": "[format('{0}-orch', parameters('demoBaseName'))]"
          },
          "computeName": {
            "value": "cpu-orchestrator"
          },
          "computeSKU": {
            "value": "[parameters('computeSKU')]"
          },
          "computeNodes": {
            "value": 4
          },
          "datastoreName": {
            "value": "datastore_orchestrator"
          },
          "identityType": {
            "value": "[parameters('identityType')]"
          },
          "applyDefaultPermissions": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "14782062007341213755"
            }
          },
          "parameters": {
            "machineLearningName": {
              "type": "string",
              "metadata": {
                "description": "Name of AzureML workspace to attach compute+storage to."
              }
            },
            "machineLearningRegion": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The region of the machine learning workspace"
              }
            },
            "pairRegion": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the location of the pair resources."
              }
            },
            "pairBaseName": {
              "type": "string",
              "metadata": {
                "description": "Base name used for creating all pair resources."
              }
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": "[replace(format('st{0}', parameters('pairBaseName')), '-', '')]",
              "metadata": {
                "description": "Name of the storage account resource to create for the pair"
              }
            },
            "datastoreName": {
              "type": "string",
              "defaultValue": "[replace(format('datastore_{0}', parameters('pairBaseName')), '-', '_')]",
              "metadata": {
                "description": "Name of the datastore for attaching the storage to the AzureML workspace."
              }
            },
            "computeName": {
              "type": "string",
              "defaultValue": "[format('cpu-cluster-{0}', parameters('pairBaseName'))]",
              "metadata": {
                "description": "Name of the default compute cluster for the pair"
              }
            },
            "computeSKU": {
              "type": "string",
              "defaultValue": "Standard_DS3_v2",
              "metadata": {
                "description": "VM size for the compute cluster"
              }
            },
            "computeNodes": {
              "type": "int",
              "defaultValue": 4,
              "metadata": {
                "description": "VM nodes for the compute cluster"
              }
            },
            "identityType": {
              "type": "string",
              "defaultValue": "UserAssigned",
              "allowedValues": [
                "UserAssigned",
                "SystemAssigned"
              ]
            },
            "uaiName": {
              "type": "string",
              "defaultValue": "[format('uai-{0}', parameters('pairBaseName'))]",
              "metadata": {
                "description": "Name of the UAI for the pair compute cluster (if identityType==UserAssigned)"
              }
            },
            "applyDefaultPermissions": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Allow compute cluster to access storage account with R/W permissions (using UAI)"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to curate the resources in Azure."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-open-storage', parameters('pairBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "machineLearningName": {
                    "value": "[parameters('machineLearningName')]"
                  },
                  "machineLearningRegion": {
                    "value": "[parameters('machineLearningRegion')]"
                  },
                  "storageName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "storageRegion": {
                    "value": "[parameters('pairRegion')]"
                  },
                  "datastoreName": {
                    "value": "[parameters('datastoreName')]"
                  },
                  "publicNetworkAccess": {
                    "value": "Enabled"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "11798981346718210369"
                    }
                  },
                  "parameters": {
                    "machineLearningName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of AzureML workspace to attach compute+storage to."
                      }
                    },
                    "machineLearningRegion": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The region of the machine learning workspace"
                      }
                    },
                    "storageName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the storage account"
                      }
                    },
                    "storageRegion": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure region of the storage to create"
                      }
                    },
                    "storageSKU": {
                      "type": "string",
                      "defaultValue": "Standard_LRS",
                      "metadata": {
                        "description": "Storage SKU"
                      },
                      "allowedValues": [
                        "Standard_LRS",
                        "Standard_ZRS",
                        "Standard_GRS",
                        "Standard_GZRS",
                        "Standard_RAGRS",
                        "Standard_RAGZRS",
                        "Premium_LRS",
                        "Premium_ZRS"
                      ]
                    },
                    "containerName": {
                      "type": "string",
                      "defaultValue": "private",
                      "metadata": {
                        "description": "Name of the storage container resource to create for the pair"
                      }
                    },
                    "datastoreName": {
                      "type": "string",
                      "defaultValue": "[replace(format('datastore_{0}', parameters('storageName')), '-', '_')]",
                      "metadata": {
                        "description": "Name of the datastore for attaching the storage to the AzureML workspace."
                      }
                    },
                    "subnetIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Resource ID of the subnets allowed into this storage"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "metadata": {
                        "description": "Allow or disallow public network access to Storage Account."
                      },
                      "allowedValues": [
                        "Enabled",
                        "vNetOnly",
                        "Disabled"
                      ]
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    }
                  },
                  "variables": {
                    "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
                    "storageAccountCleanName": "[substring(variables('storageNameCleaned'), 0, min(length(variables('storageNameCleaned')), 24))]",
                    "storageAllowedSubnetIds": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), createArray(), parameters('subnetIds'))]",
                    "storagedefaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]",
                    "storagepublicNetworkAccess": "[if(equals(parameters('publicNetworkAccess'), 'Disabled'), 'Disabled', 'Enabled')]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2022-05-01",
                      "name": "[variables('storageAccountCleanName')]",
                      "location": "[parameters('storageRegion')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('storageSKU')]"
                      },
                      "kind": "StorageV2",
                      "properties": {
                        "accessTier": "Hot",
                        "allowBlobPublicAccess": false,
                        "allowCrossTenantReplication": false,
                        "allowedCopyScope": "PrivateLink",
                        "allowSharedKeyAccess": true,
                        "networkAcls": {
                          "copy": [
                            {
                              "name": "virtualNetworkRules",
                              "count": "[length(variables('storageAllowedSubnetIds'))]",
                              "input": {
                                "id": "[variables('storageAllowedSubnetIds')[copyIndex('virtualNetworkRules')]]",
                                "action": "Allow"
                              }
                            }
                          ],
                          "bypass": "AzureServices",
                          "defaultAction": "[variables('storagedefaultAction')]",
                          "resourceAccessRules": []
                        },
                        "publicNetworkAccess": "[variables('storagepublicNetworkAccess')]",
                        "routingPreference": {
                          "routingChoice": "MicrosoftRouting",
                          "publishMicrosoftEndpoints": true
                        },
                        "encryption": {
                          "keySource": "Microsoft.Storage",
                          "requireInfrastructureEncryption": false,
                          "services": {
                            "blob": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "file": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "queue": {
                              "enabled": true,
                              "keyType": "Service"
                            },
                            "table": {
                              "enabled": true,
                              "keyType": "Service"
                            }
                          }
                        },
                        "isHnsEnabled": false,
                        "isNfsV3Enabled": false,
                        "isLocalUserEnabled": false,
                        "isSftpEnabled": false,
                        "keyPolicy": {
                          "keyExpirationPeriodInDays": 7
                        },
                        "largeFileSharesState": "Disabled",
                        "minimumTlsVersion": "TLS1_2",
                        "supportsHttpsTrafficOnly": true
                      }
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2022-05-01",
                      "name": "[format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName'))]",
                      "properties": {
                        "metadata": {},
                        "publicAccess": "None"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces/datastores",
                      "apiVersion": "2022-06-01-preview",
                      "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('datastoreName'))]",
                      "properties": {
                        "tags": "[parameters('tags')]",
                        "credentials": {
                          "credentialsType": "None"
                        },
                        "description": "[format('Private storage in region {0}', parameters('storageRegion'))]",
                        "properties": {},
                        "datastoreType": "AzureBlob",
                        "accountName": "[variables('storageAccountCleanName')]",
                        "containerName": "[parameters('containerName')]",
                        "resourceGroup": "[resourceGroup().name]",
                        "subscriptionId": "[subscription().subscriptionId]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[2])]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "storageId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                    },
                    "storageName": {
                      "type": "string",
                      "value": "[variables('storageAccountCleanName')]"
                    },
                    "containerName": {
                      "type": "string",
                      "value": "[format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName'))]"
                    },
                    "datastoreName": {
                      "type": "string",
                      "value": "[format('{0}/{1}', parameters('machineLearningName'), parameters('datastoreName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-open-aml-compute', parameters('pairBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "machineLearningName": {
                    "value": "[parameters('machineLearningName')]"
                  },
                  "machineLearningRegion": {
                    "value": "[parameters('machineLearningRegion')]"
                  },
                  "computeName": {
                    "value": "[parameters('computeName')]"
                  },
                  "computeRegion": {
                    "value": "[parameters('pairRegion')]"
                  },
                  "computeSKU": {
                    "value": "[parameters('computeSKU')]"
                  },
                  "computeNodes": {
                    "value": "[parameters('computeNodes')]"
                  },
                  "computeIdentityType": {
                    "value": "[parameters('identityType')]"
                  },
                  "computeUaiName": {
                    "value": "[parameters('uaiName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "12473331180732336644"
                    }
                  },
                  "parameters": {
                    "machineLearningName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of AzureML workspace to attach compute+storage to."
                      }
                    },
                    "machineLearningRegion": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The region of the machine learning workspace"
                      }
                    },
                    "computeName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the compute cluster to create"
                      }
                    },
                    "computeRegion": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the location of the compute resources."
                      }
                    },
                    "computeSKU": {
                      "type": "string",
                      "defaultValue": "Standard_DS3_v2",
                      "metadata": {
                        "description": "VM size for the default compute cluster"
                      }
                    },
                    "computeNodes": {
                      "type": "int",
                      "defaultValue": 4,
                      "metadata": {
                        "description": "VM nodes for the default compute cluster"
                      }
                    },
                    "computeIdentityType": {
                      "type": "string",
                      "defaultValue": "UserAssigned",
                      "allowedValues": [
                        "UserAssigned",
                        "SystemAssigned"
                      ]
                    },
                    "computeUaiName": {
                      "type": "string",
                      "defaultValue": "[format('uai-{0}', parameters('computeName'))]",
                      "metadata": {
                        "description": "Name of the UAI for the compute cluster (if computeIdentityType==UserAssigned)"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to curate the resources in Azure."
                      }
                    }
                  },
                  "variables": {
                    "userAssignedIdentities": "[if(equals(parameters('computeIdentityType'), 'SystemAssigned'), null(), createObject(format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{2}', subscription().subscriptionId, resourceGroup().name, parameters('computeUaiName')), createObject()))]"
                  },
                  "resources": [
                    {
                      "condition": "[equals(parameters('computeIdentityType'), 'UserAssigned')]",
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2022-01-31-preview",
                      "name": "[parameters('computeUaiName')]",
                      "location": "[parameters('computeRegion')]",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces/computes",
                      "apiVersion": "2021-07-01",
                      "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('computeName'))]",
                      "location": "[parameters('machineLearningRegion')]",
                      "identity": {
                        "type": "[parameters('computeIdentityType')]",
                        "userAssignedIdentities": "[variables('userAssignedIdentities')]"
                      },
                      "properties": {
                        "computeType": "AmlCompute",
                        "computeLocation": "[parameters('computeRegion')]",
                        "disableLocalAuth": true,
                        "properties": {
                          "vmPriority": "Dedicated",
                          "vmSize": "[parameters('computeSKU')]",
                          "osType": "Linux",
                          "scaleSettings": {
                            "maxNodeCount": "[parameters('computeNodes')]",
                            "minNodeCount": 0,
                            "nodeIdleTimeBeforeScaleDown": "PT300S"
                          },
                          "enableNodePublicIp": true,
                          "isolatedNetwork": false,
                          "remoteLoginPortPublicAccess": "Disabled",
                          "subnet": "[json('null')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('computeUaiName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(equals(parameters('computeIdentityType'), 'UserAssigned'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('computeUaiName')), '2022-01-31-preview').principalId, reference(resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('machineLearningName'), parameters('computeName')), '2021-07-01', 'full').identity.principalId)]"
                    },
                    "compute": {
                      "type": "string",
                      "value": "[parameters('computeName')]"
                    },
                    "region": {
                      "type": "string",
                      "value": "[parameters('computeRegion')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('applyDefaultPermissions')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-internal-rw-perms', parameters('pairBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageName.value]"
                  },
                  "identityPrincipalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-aml-compute', parameters('pairBaseName'))), '2020-10-01').outputs.identityPrincipalId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "8496672138142568903"
                    }
                  },
                  "parameters": {
                    "storageAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Full path to storage"
                      }
                    },
                    "identityPrincipalId": {
                      "type": "string",
                      "metadata": {
                        "description": "PrincipalId of the managed identity"
                      }
                    },
                    "computeToStorageRoles": {
                      "type": "array",
                      "defaultValue": [
                        "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                        "81a9662b-bebf-436f-a333-f67b29880f12",
                        "c12c1c16-33a1-487b-954d-41c89c60f349"
                      ],
                      "metadata": {
                        "description": "Role definition IDs for the compute towards the internal storage"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignments",
                        "count": "[length(parameters('computeToStorageRoles'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
                      "name": "[guid(resourceGroup().id, resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('identityPrincipalId'), parameters('computeToStorageRoles')[copyIndex()])]",
                      "properties": {
                        "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, parameters('computeToStorageRoles')[copyIndex()])]",
                        "principalId": "[parameters('identityPrincipalId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-open-aml-compute', parameters('pairBaseName')))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-open-storage', parameters('pairBaseName')))]"
              ]
            }
          ],
          "outputs": {
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-aml-compute', parameters('pairBaseName'))), '2020-10-01').outputs.identityPrincipalId.value]"
            },
            "storageName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageName.value]"
            },
            "storageServiceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageId.value]"
            },
            "computeName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-aml-compute', parameters('pairBaseName'))), '2020-10-01').outputs.compute.value]"
            },
            "region": {
              "type": "string",
              "value": "[parameters('pairRegion')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion')))]"
      ]
    },
    {
      "copy": {
        "name": "silos",
        "count": "[length(range(0, variables('siloCount')))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-openpair-silo-{1}', parameters('demoBaseName'), range(0, variables('siloCount'))[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "machineLearningName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))), '2020-10-01').outputs.workspaceName.value]"
          },
          "machineLearningRegion": {
            "value": "[parameters('orchestratorRegion')]"
          },
          "pairRegion": {
            "value": "[parameters('siloRegions')[range(0, variables('siloCount'))[copyIndex()]]]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "pairBaseName": {
            "value": "[format('{0}-silo{1}-{2}', parameters('demoBaseName'), range(0, variables('siloCount'))[copyIndex()], parameters('siloRegions')[range(0, variables('siloCount'))[copyIndex()]])]"
          },
          "computeName": {
            "value": "[format('cpu-silo{0}-{1}', range(0, variables('siloCount'))[copyIndex()], parameters('siloRegions')[range(0, variables('siloCount'))[copyIndex()]])]"
          },
          "computeSKU": {
            "value": "[parameters('computeSKU')]"
          },
          "computeNodes": {
            "value": 4
          },
          "datastoreName": {
            "value": "[format('datastore_silo{0}_{1}', range(0, variables('siloCount'))[copyIndex()], parameters('siloRegions')[range(0, variables('siloCount'))[copyIndex()]])]"
          },
          "identityType": {
            "value": "[parameters('identityType')]"
          },
          "applyDefaultPermissions": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "14782062007341213755"
            }
          },
          "parameters": {
            "machineLearningName": {
              "type": "string",
              "metadata": {
                "description": "Name of AzureML workspace to attach compute+storage to."
              }
            },
            "machineLearningRegion": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The region of the machine learning workspace"
              }
            },
            "pairRegion": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the location of the pair resources."
              }
            },
            "pairBaseName": {
              "type": "string",
              "metadata": {
                "description": "Base name used for creating all pair resources."
              }
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": "[replace(format('st{0}', parameters('pairBaseName')), '-', '')]",
              "metadata": {
                "description": "Name of the storage account resource to create for the pair"
              }
            },
            "datastoreName": {
              "type": "string",
              "defaultValue": "[replace(format('datastore_{0}', parameters('pairBaseName')), '-', '_')]",
              "metadata": {
                "description": "Name of the datastore for attaching the storage to the AzureML workspace."
              }
            },
            "computeName": {
              "type": "string",
              "defaultValue": "[format('cpu-cluster-{0}', parameters('pairBaseName'))]",
              "metadata": {
                "description": "Name of the default compute cluster for the pair"
              }
            },
            "computeSKU": {
              "type": "string",
              "defaultValue": "Standard_DS3_v2",
              "metadata": {
                "description": "VM size for the compute cluster"
              }
            },
            "computeNodes": {
              "type": "int",
              "defaultValue": 4,
              "metadata": {
                "description": "VM nodes for the compute cluster"
              }
            },
            "identityType": {
              "type": "string",
              "defaultValue": "UserAssigned",
              "allowedValues": [
                "UserAssigned",
                "SystemAssigned"
              ]
            },
            "uaiName": {
              "type": "string",
              "defaultValue": "[format('uai-{0}', parameters('pairBaseName'))]",
              "metadata": {
                "description": "Name of the UAI for the pair compute cluster (if identityType==UserAssigned)"
              }
            },
            "applyDefaultPermissions": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Allow compute cluster to access storage account with R/W permissions (using UAI)"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to curate the resources in Azure."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-open-storage', parameters('pairBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "machineLearningName": {
                    "value": "[parameters('machineLearningName')]"
                  },
                  "machineLearningRegion": {
                    "value": "[parameters('machineLearningRegion')]"
                  },
                  "storageName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "storageRegion": {
                    "value": "[parameters('pairRegion')]"
                  },
                  "datastoreName": {
                    "value": "[parameters('datastoreName')]"
                  },
                  "publicNetworkAccess": {
                    "value": "Enabled"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "11798981346718210369"
                    }
                  },
                  "parameters": {
                    "machineLearningName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of AzureML workspace to attach compute+storage to."
                      }
                    },
                    "machineLearningRegion": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The region of the machine learning workspace"
                      }
                    },
                    "storageName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the storage account"
                      }
                    },
                    "storageRegion": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure region of the storage to create"
                      }
                    },
                    "storageSKU": {
                      "type": "string",
                      "defaultValue": "Standard_LRS",
                      "metadata": {
                        "description": "Storage SKU"
                      },
                      "allowedValues": [
                        "Standard_LRS",
                        "Standard_ZRS",
                        "Standard_GRS",
                        "Standard_GZRS",
                        "Standard_RAGRS",
                        "Standard_RAGZRS",
                        "Premium_LRS",
                        "Premium_ZRS"
                      ]
                    },
                    "containerName": {
                      "type": "string",
                      "defaultValue": "private",
                      "metadata": {
                        "description": "Name of the storage container resource to create for the pair"
                      }
                    },
                    "datastoreName": {
                      "type": "string",
                      "defaultValue": "[replace(format('datastore_{0}', parameters('storageName')), '-', '_')]",
                      "metadata": {
                        "description": "Name of the datastore for attaching the storage to the AzureML workspace."
                      }
                    },
                    "subnetIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Resource ID of the subnets allowed into this storage"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "metadata": {
                        "description": "Allow or disallow public network access to Storage Account."
                      },
                      "allowedValues": [
                        "Enabled",
                        "vNetOnly",
                        "Disabled"
                      ]
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    }
                  },
                  "variables": {
                    "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
                    "storageAccountCleanName": "[substring(variables('storageNameCleaned'), 0, min(length(variables('storageNameCleaned')), 24))]",
                    "storageAllowedSubnetIds": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), createArray(), parameters('subnetIds'))]",
                    "storagedefaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]",
                    "storagepublicNetworkAccess": "[if(equals(parameters('publicNetworkAccess'), 'Disabled'), 'Disabled', 'Enabled')]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2022-05-01",
                      "name": "[variables('storageAccountCleanName')]",
                      "location": "[parameters('storageRegion')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('storageSKU')]"
                      },
                      "kind": "StorageV2",
                      "properties": {
                        "accessTier": "Hot",
                        "allowBlobPublicAccess": false,
                        "allowCrossTenantReplication": false,
                        "allowedCopyScope": "PrivateLink",
                        "allowSharedKeyAccess": true,
                        "networkAcls": {
                          "copy": [
                            {
                              "name": "virtualNetworkRules",
                              "count": "[length(variables('storageAllowedSubnetIds'))]",
                              "input": {
                                "id": "[variables('storageAllowedSubnetIds')[copyIndex('virtualNetworkRules')]]",
                                "action": "Allow"
                              }
                            }
                          ],
                          "bypass": "AzureServices",
                          "defaultAction": "[variables('storagedefaultAction')]",
                          "resourceAccessRules": []
                        },
                        "publicNetworkAccess": "[variables('storagepublicNetworkAccess')]",
                        "routingPreference": {
                          "routingChoice": "MicrosoftRouting",
                          "publishMicrosoftEndpoints": true
                        },
                        "encryption": {
                          "keySource": "Microsoft.Storage",
                          "requireInfrastructureEncryption": false,
                          "services": {
                            "blob": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "file": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "queue": {
                              "enabled": true,
                              "keyType": "Service"
                            },
                            "table": {
                              "enabled": true,
                              "keyType": "Service"
                            }
                          }
                        },
                        "isHnsEnabled": false,
                        "isNfsV3Enabled": false,
                        "isLocalUserEnabled": false,
                        "isSftpEnabled": false,
                        "keyPolicy": {
                          "keyExpirationPeriodInDays": 7
                        },
                        "largeFileSharesState": "Disabled",
                        "minimumTlsVersion": "TLS1_2",
                        "supportsHttpsTrafficOnly": true
                      }
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2022-05-01",
                      "name": "[format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName'))]",
                      "properties": {
                        "metadata": {},
                        "publicAccess": "None"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces/datastores",
                      "apiVersion": "2022-06-01-preview",
                      "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('datastoreName'))]",
                      "properties": {
                        "tags": "[parameters('tags')]",
                        "credentials": {
                          "credentialsType": "None"
                        },
                        "description": "[format('Private storage in region {0}', parameters('storageRegion'))]",
                        "properties": {},
                        "datastoreType": "AzureBlob",
                        "accountName": "[variables('storageAccountCleanName')]",
                        "containerName": "[parameters('containerName')]",
                        "resourceGroup": "[resourceGroup().name]",
                        "subscriptionId": "[subscription().subscriptionId]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[2])]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "storageId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                    },
                    "storageName": {
                      "type": "string",
                      "value": "[variables('storageAccountCleanName')]"
                    },
                    "containerName": {
                      "type": "string",
                      "value": "[format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName'))]"
                    },
                    "datastoreName": {
                      "type": "string",
                      "value": "[format('{0}/{1}', parameters('machineLearningName'), parameters('datastoreName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-open-aml-compute', parameters('pairBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "machineLearningName": {
                    "value": "[parameters('machineLearningName')]"
                  },
                  "machineLearningRegion": {
                    "value": "[parameters('machineLearningRegion')]"
                  },
                  "computeName": {
                    "value": "[parameters('computeName')]"
                  },
                  "computeRegion": {
                    "value": "[parameters('pairRegion')]"
                  },
                  "computeSKU": {
                    "value": "[parameters('computeSKU')]"
                  },
                  "computeNodes": {
                    "value": "[parameters('computeNodes')]"
                  },
                  "computeIdentityType": {
                    "value": "[parameters('identityType')]"
                  },
                  "computeUaiName": {
                    "value": "[parameters('uaiName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "12473331180732336644"
                    }
                  },
                  "parameters": {
                    "machineLearningName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of AzureML workspace to attach compute+storage to."
                      }
                    },
                    "machineLearningRegion": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The region of the machine learning workspace"
                      }
                    },
                    "computeName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the compute cluster to create"
                      }
                    },
                    "computeRegion": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the location of the compute resources."
                      }
                    },
                    "computeSKU": {
                      "type": "string",
                      "defaultValue": "Standard_DS3_v2",
                      "metadata": {
                        "description": "VM size for the default compute cluster"
                      }
                    },
                    "computeNodes": {
                      "type": "int",
                      "defaultValue": 4,
                      "metadata": {
                        "description": "VM nodes for the default compute cluster"
                      }
                    },
                    "computeIdentityType": {
                      "type": "string",
                      "defaultValue": "UserAssigned",
                      "allowedValues": [
                        "UserAssigned",
                        "SystemAssigned"
                      ]
                    },
                    "computeUaiName": {
                      "type": "string",
                      "defaultValue": "[format('uai-{0}', parameters('computeName'))]",
                      "metadata": {
                        "description": "Name of the UAI for the compute cluster (if computeIdentityType==UserAssigned)"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to curate the resources in Azure."
                      }
                    }
                  },
                  "variables": {
                    "userAssignedIdentities": "[if(equals(parameters('computeIdentityType'), 'SystemAssigned'), null(), createObject(format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{2}', subscription().subscriptionId, resourceGroup().name, parameters('computeUaiName')), createObject()))]"
                  },
                  "resources": [
                    {
                      "condition": "[equals(parameters('computeIdentityType'), 'UserAssigned')]",
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2022-01-31-preview",
                      "name": "[parameters('computeUaiName')]",
                      "location": "[parameters('computeRegion')]",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces/computes",
                      "apiVersion": "2021-07-01",
                      "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('computeName'))]",
                      "location": "[parameters('machineLearningRegion')]",
                      "identity": {
                        "type": "[parameters('computeIdentityType')]",
                        "userAssignedIdentities": "[variables('userAssignedIdentities')]"
                      },
                      "properties": {
                        "computeType": "AmlCompute",
                        "computeLocation": "[parameters('computeRegion')]",
                        "disableLocalAuth": true,
                        "properties": {
                          "vmPriority": "Dedicated",
                          "vmSize": "[parameters('computeSKU')]",
                          "osType": "Linux",
                          "scaleSettings": {
                            "maxNodeCount": "[parameters('computeNodes')]",
                            "minNodeCount": 0,
                            "nodeIdleTimeBeforeScaleDown": "PT300S"
                          },
                          "enableNodePublicIp": true,
                          "isolatedNetwork": false,
                          "remoteLoginPortPublicAccess": "Disabled",
                          "subnet": "[json('null')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('computeUaiName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(equals(parameters('computeIdentityType'), 'UserAssigned'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('computeUaiName')), '2022-01-31-preview').principalId, reference(resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('machineLearningName'), parameters('computeName')), '2021-07-01', 'full').identity.principalId)]"
                    },
                    "compute": {
                      "type": "string",
                      "value": "[parameters('computeName')]"
                    },
                    "region": {
                      "type": "string",
                      "value": "[parameters('computeRegion')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('applyDefaultPermissions')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-internal-rw-perms', parameters('pairBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageName.value]"
                  },
                  "identityPrincipalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-aml-compute', parameters('pairBaseName'))), '2020-10-01').outputs.identityPrincipalId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.13.1.58284",
                      "templateHash": "8496672138142568903"
                    }
                  },
                  "parameters": {
                    "storageAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Full path to storage"
                      }
                    },
                    "identityPrincipalId": {
                      "type": "string",
                      "metadata": {
                        "description": "PrincipalId of the managed identity"
                      }
                    },
                    "computeToStorageRoles": {
                      "type": "array",
                      "defaultValue": [
                        "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                        "81a9662b-bebf-436f-a333-f67b29880f12",
                        "c12c1c16-33a1-487b-954d-41c89c60f349"
                      ],
                      "metadata": {
                        "description": "Role definition IDs for the compute towards the internal storage"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignments",
                        "count": "[length(parameters('computeToStorageRoles'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
                      "name": "[guid(resourceGroup().id, resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('identityPrincipalId'), parameters('computeToStorageRoles')[copyIndex()])]",
                      "properties": {
                        "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, parameters('computeToStorageRoles')[copyIndex()])]",
                        "principalId": "[parameters('identityPrincipalId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-open-aml-compute', parameters('pairBaseName')))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-open-storage', parameters('pairBaseName')))]"
              ]
            }
          ],
          "outputs": {
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-aml-compute', parameters('pairBaseName'))), '2020-10-01').outputs.identityPrincipalId.value]"
            },
            "storageName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageName.value]"
            },
            "storageServiceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageId.value]"
            },
            "computeName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-open-aml-compute', parameters('pairBaseName'))), '2020-10-01').outputs.compute.value]"
            },
            "region": {
              "type": "string",
              "value": "[parameters('pairRegion')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion')))]"
      ]
    },
    {
      "copy": {
        "name": "siloToOrchPermissions",
        "count": "[length(range(0, variables('siloCount')))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-rw-perms-silo{1}-to-orch', parameters('demoBaseName'), range(0, variables('siloCount'))[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-openpair-orchestrator', parameters('demoBaseName'))), '2020-10-01').outputs.storageName.value]"
          },
          "identityPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-openpair-silo-{1}', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]])), '2020-10-01').outputs.identityPrincipalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.13.1.58284",
              "templateHash": "8496672138142568903"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Full path to storage"
              }
            },
            "identityPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "PrincipalId of the managed identity"
              }
            },
            "computeToStorageRoles": {
              "type": "array",
              "defaultValue": [
                "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                "81a9662b-bebf-436f-a333-f67b29880f12",
                "c12c1c16-33a1-487b-954d-41c89c60f349"
              ],
              "metadata": {
                "description": "Role definition IDs for the compute towards the internal storage"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignments",
                "count": "[length(parameters('computeToStorageRoles'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(resourceGroup().id, resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('identityPrincipalId'), parameters('computeToStorageRoles')[copyIndex()])]",
              "properties": {
                "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, parameters('computeToStorageRoles')[copyIndex()])]",
                "principalId": "[parameters('identityPrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-openpair-orchestrator', parameters('demoBaseName')))]",
        "silos"
      ]
    }
  ]
}