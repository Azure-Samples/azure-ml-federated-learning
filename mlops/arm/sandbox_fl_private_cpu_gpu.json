{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.14.85.62628",
      "templateHash": "3081343060510816650"
    }
  },
  "parameters": {
    "demoBaseName": {
      "type": "string",
      "defaultValue": "fldemo",
      "metadata": {
        "description": "Base name of the demo, used for creating all resources as prefix"
      }
    },
    "orchestratorRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Region of the orchestrator (workspace, central storage and compute)."
      }
    },
    "siloRegions": {
      "type": "array",
      "defaultValue": [
        "australiaeast",
        "eastus",
        "westeurope"
      ],
      "metadata": {
        "description": "List of each region in which to create an internal silo."
      }
    },
    "primarySKU": {
      "type": "string",
      "defaultValue": "Standard_DS4_v2",
      "metadata": {
        "description": "The VM used for creating compute clusters in orchestrator and silos."
      }
    },
    "secondarySKU": {
      "type": "string",
      "defaultValue": "Standard_NC6",
      "metadata": {
        "description": "The VM used for creating a second compute cluster in orchestrator and silos."
      }
    },
    "workspaceNetworkAccess": {
      "type": "string",
      "defaultValue": "public",
      "allowedValues": [
        "public",
        "private"
      ],
      "metadata": {
        "description": "Make it possible to interact with the workspace through (public) azure portal: workspace and default storage on public network (RBAC controlled)."
      }
    },
    "applyVNetPeering": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Apply vnet peering to allow for vertical FL"
      }
    },
    "kaggleUsername": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Provide your Kaggle API user name to run our samples relying on Kaggle datasets."
      }
    },
    "kaggleKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Provide your Kaggle API key to run our samples relying on Kaggle datasets."
      }
    }
  },
  "resources": [
    {
      "condition": "[not(empty(parameters('kaggleUsername')))]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[format('ws-shkv-{0}/kaggleusername', parameters('demoBaseName'))]",
      "properties": {
        "value": "[parameters('kaggleUsername')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'sandbox')]"
      ]
    },
    {
      "condition": "[not(empty(parameters('kaggleUsername')))]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[format('ws-shkv-{0}/kagglekey', parameters('demoBaseName'))]",
      "properties": {
        "value": "[parameters('kaggleKey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'sandbox')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "sandbox",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "demoBaseName": {
            "value": "[parameters('demoBaseName')]"
          },
          "orchestratorRegion": {
            "value": "[parameters('orchestratorRegion')]"
          },
          "siloRegions": {
            "value": "[parameters('siloRegions')]"
          },
          "compute1SKU": {
            "value": "[parameters('primarySKU')]"
          },
          "compute2": {
            "value": true
          },
          "compute2SKU": {
            "value": "[parameters('secondarySKU')]"
          },
          "workspaceNetworkAccess": {
            "value": "[parameters('workspaceNetworkAccess')]"
          },
          "orchestratorStorageNetworkAccess": {
            "value": "private"
          },
          "siloStorageNetworkAccess": {
            "value": "private"
          },
          "applyVNetPeering": {
            "value": "[parameters('applyVNetPeering')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.85.62628",
              "templateHash": "8854562924516790457"
            }
          },
          "parameters": {
            "demoBaseName": {
              "type": "string",
              "defaultValue": "fldemo",
              "maxLength": 20,
              "minLength": 2,
              "metadata": {
                "description": "Base name of the demo, used for creating all resources as prefix"
              }
            },
            "orchestratorRegion": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Region of the orchestrator (workspace, central storage and compute)."
              }
            },
            "workspaceNetworkAccess": {
              "type": "string",
              "defaultValue": "private",
              "allowedValues": [
                "public",
                "private"
              ],
              "metadata": {
                "description": "WARNING: make it possible to interact with the workspace through (public) azure portal: workspace and default storage on public network (RBAC controlled)."
              }
            },
            "orchestratorStorageNetworkAccess": {
              "type": "string",
              "defaultValue": "private",
              "allowedValues": [
                "public",
                "private"
              ],
              "metadata": {
                "description": "Set the orchestrator storage network access as private, with private endpoints into each silo."
              }
            },
            "siloStorageNetworkAccess": {
              "type": "string",
              "defaultValue": "private",
              "allowedValues": [
                "public",
                "private"
              ],
              "metadata": {
                "description": "Set the silo storage network access as private, with private endpoints into each silo."
              }
            },
            "siloRegions": {
              "type": "array",
              "defaultValue": [
                "australiaeast",
                "eastus",
                "westeurope"
              ],
              "metadata": {
                "description": "List of each region in which to create an internal silo."
              }
            },
            "compute1SKU": {
              "type": "string",
              "defaultValue": "Standard_DS4_v2",
              "metadata": {
                "description": "The VM used for creating compute clusters in orchestrator and silos."
              }
            },
            "compute2": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Flag whether to create a second compute or not"
              }
            },
            "compute2SKU": {
              "type": "string",
              "defaultValue": "Standard_NC6",
              "metadata": {
                "description": "The VM used for creating a second compute cluster in orchestrator and silos."
              }
            },
            "applyVNetPeering": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "WARNING: turn true to apply vNet peering from silos to orchestrator allowing compute to compute communication."
              }
            },
            "confidentialityKeyVaultName": {
              "type": "string",
              "defaultValue": "[format('kv-{0}', parameters('demoBaseName'))]",
              "metadata": {
                "description": "Name of the keyvault to use for storing actual secrets (ex: encryption at rest)."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {
                "Owner": "AzureML Samples",
                "Project": "azure-ml-federated-learning",
                "Environment": "dev",
                "Toolkit": "bicep",
                "Docs": "https://github.com/Azure-Samples/azure-ml-federated-learning"
              },
              "metadata": {
                "description": "Tags to curate the resources in Azure."
              }
            }
          },
          "variables": {
            "orchestratorStorageAccountName": "[replace(format('st{0}orch', parameters('demoBaseName')), '-', '')]",
            "orchestratorStorageAccountCleanName": "[substring(variables('orchestratorStorageAccountName'), 0, min(length(variables('orchestratorStorageAccountName')), 24))]",
            "siloCount": "[length(parameters('siloRegions'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
              "location": "global",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('nsg-{0}', parameters('demoBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('orchestratorRegion')]"
                  },
                  "nsgName": {
                    "value": "[format('nsg-{0}', parameters('demoBaseName'))]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "9356966489364776969"
                    }
                  },
                  "parameters": {
                    "nsgName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the network security group"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Azure region of the deployment"
                      }
                    },
                    "workspaceRegion": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Region of the AzureML workspace"
                      }
                    },
                    "enableNodePublicIp": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set rules to allow for compute with public IP"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2022-07-01",
                      "name": "[parameters('nsgName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "condition": "[parameters('enableNodePublicIp')]",
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureMLPublicIPInbound')]",
                      "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "44224",
                        "sourceAddressPrefix": "AzureMachineLearning",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 130,
                        "direction": "Inbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureMLOutboundTcp')]",
                      "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRanges": [
                          "443",
                          "8787",
                          "18881"
                        ],
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "AzureMachineLearning",
                        "access": "Allow",
                        "priority": 140,
                        "direction": "Outbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureMLOutboundUdp')]",
                      "properties": {
                        "protocol": "Udp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "5831",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "AzureMachineLearning",
                        "access": "Allow",
                        "priority": 150,
                        "direction": "Outbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'BatchNodeManagementOutbound')]",
                      "properties": {
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "443",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "[format('BatchNodeManagement.{0}', parameters('workspaceRegion'))]",
                        "access": "Allow",
                        "priority": 160,
                        "direction": "Outbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'OrchestratorStorageAccount')]",
                      "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "443",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "[format('Storage.{0}', parameters('workspaceRegion'))]",
                        "access": "Allow",
                        "priority": 170,
                        "direction": "Outbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'SiloStorageAccount')]",
                      "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "443",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "[format('Storage.{0}', parameters('location'))]",
                        "access": "Allow",
                        "priority": 171,
                        "direction": "Outbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureActiveDirectory')]",
                      "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "AzureActiveDirectory",
                        "access": "Allow",
                        "priority": 180,
                        "direction": "Outbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureFrontDoor')]",
                      "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "443",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "AzureFrontDoor.FrontEnd",
                        "access": "Allow",
                        "priority": 190,
                        "direction": "Outbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureContainerRegistryOrch')]",
                      "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "443",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "[format('AzureContainerRegistry.{0}', parameters('workspaceRegion'))]",
                        "access": "Allow",
                        "priority": 200,
                        "direction": "Outbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureContainerRegistrySilo')]",
                      "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "443",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "[format('AzureContainerRegistry.{0}', parameters('location'))]",
                        "access": "Allow",
                        "priority": 201,
                        "direction": "Outbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('nsgName'), 'MicrosoftContainerRegistry')]",
                      "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "443",
                        "sourceAddressPrefix": "VirtualNetwork",
                        "destinationAddressPrefix": "MicrosoftContainerRegistry",
                        "access": "Allow",
                        "priority": 210,
                        "direction": "Outbound"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('vnet-{0}-deployment', parameters('demoBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('orchestratorRegion')]"
                  },
                  "virtualNetworkName": {
                    "value": "[format('vnet-{0}-ws', parameters('demoBaseName'))]"
                  },
                  "networkSecurityGroupId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('nsg-{0}', parameters('demoBaseName'))), '2020-10-01').outputs.id.value]"
                  },
                  "vnetAddressPrefix": {
                    "value": "10.0.0.0/16"
                  },
                  "subnets": {
                    "value": [
                      {
                        "name": "compute",
                        "addressPrefix": "10.0.1.0/24"
                      },
                      {
                        "name": "endpoints",
                        "addressPrefix": "10.0.0.0/24"
                      }
                    ]
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "12102256299858550532"
                    }
                  },
                  "parameters": {
                    "virtualNetworkName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the virtual network resource"
                      }
                    },
                    "networkSecurityGroupId": {
                      "type": "string",
                      "metadata": {
                        "description": "Group ID of the network security group"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Azure region of the deployment"
                      }
                    },
                    "vnetAddressPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.0.0/16",
                      "metadata": {
                        "description": "Virtual network address prefix"
                      }
                    },
                    "subnets": {
                      "type": "array",
                      "defaultValue": [
                        {
                          "name": "snet-training",
                          "addressPrefix": "10.0.0.0/24"
                        }
                      ],
                      "metadata": {
                        "description": "Training subnets names and address prefix"
                      }
                    },
                    "serviceEndpoints": {
                      "type": "array",
                      "defaultValue": [
                        "Microsoft.KeyVault",
                        "Microsoft.ContainerRegistry",
                        "Microsoft.Storage"
                      ],
                      "metadata": {
                        "description": "List of service endpoints expected on this vnet"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    }
                  },
                  "variables": {
                    "copy": [
                      {
                        "name": "serviceEndpointsDefinition",
                        "count": "[length(parameters('serviceEndpoints'))]",
                        "input": {
                          "service": "[parameters('serviceEndpoints')[copyIndex('serviceEndpointsDefinition')]]"
                        }
                      },
                      {
                        "name": "subnetsDefinition",
                        "count": "[length(parameters('subnets'))]",
                        "input": {
                          "name": "[parameters('subnets')[copyIndex('subnetsDefinition')].name]",
                          "properties": {
                            "addressPrefix": "[parameters('subnets')[copyIndex('subnetsDefinition')].addressPrefix]",
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Disabled",
                            "serviceEndpoints": "[variables('serviceEndpointsDefinition')]",
                            "networkSecurityGroup": {
                              "id": "[parameters('networkSecurityGroupId')]"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2022-01-01",
                      "name": "[parameters('virtualNetworkName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('vnetAddressPrefix')]"
                          ]
                        },
                        "subnets": "[variables('subnetsDefinition')]"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('virtualNetworkName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('nsg-{0}', parameters('demoBaseName')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "machineLearningName": {
                    "value": "[format('aml-{0}', parameters('demoBaseName'))]"
                  },
                  "machineLearningDescription": {
                    "value": "Azure ML demo workspace for federated learning"
                  },
                  "baseName": {
                    "value": "[parameters('demoBaseName')]"
                  },
                  "location": {
                    "value": "[parameters('orchestratorRegion')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "workspacePublicNetworkAccess": "[if(equals(parameters('workspaceNetworkAccess'), 'public'), createObject('value', 'Enabled'), createObject('value', 'Disabled'))]",
                  "virtualNetworkId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('vnet-{0}-deployment', parameters('demoBaseName'))), '2020-10-01').outputs.id.value]"
                  },
                  "computeSubnetName": {
                    "value": "compute"
                  },
                  "endpointsSubnetName": {
                    "value": "endpoints"
                  },
                  "createPrivateDNSZones": {
                    "value": true
                  },
                  "acrPLEStaticIPs": {
                    "value": "10.0.0.237,10.0.0.236"
                  },
                  "amlPLEStaticIPs": {
                    "value": "10.0.0.240,10.0.0.241,10.0.0.242"
                  },
                  "blobPLEStaticIP": {
                    "value": "10.0.0.239"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "9728481097255048445"
                    }
                  },
                  "parameters": {
                    "baseName": {
                      "type": "string",
                      "maxLength": 20,
                      "minLength": 2,
                      "metadata": {
                        "description": "Base name to create all the resources"
                      }
                    },
                    "machineLearningName": {
                      "type": "string",
                      "defaultValue": "[format('aml-{0}', parameters('baseName'))]",
                      "metadata": {
                        "description": "Machine learning workspace name"
                      }
                    },
                    "machineLearningFriendlyName": {
                      "type": "string",
                      "defaultValue": "[format('{0} (private)', parameters('baseName'))]",
                      "metadata": {
                        "description": "Machine learning workspace display name"
                      }
                    },
                    "machineLearningDescription": {
                      "type": "string",
                      "defaultValue": "An AzureML workspace behind a private link endpoint.",
                      "metadata": {
                        "description": "Machine learning workspace description"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Specifies the location of the Azure Machine Learning workspace and dependent resources."
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "metadata": {
                        "description": "Virtual network ID for the workspace"
                      }
                    },
                    "computeSubnetName": {
                      "type": "string",
                      "defaultValue": "compute",
                      "metadata": {
                        "description": "Subnet name for the workspace"
                      }
                    },
                    "endpointsSubnetName": {
                      "type": "string",
                      "defaultValue": "endpoints",
                      "metadata": {
                        "description": "Subnet name for the workspace"
                      }
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "defaultValue": "[replace(format('cr-{0}', parameters('baseName')), '-', '')]",
                      "metadata": {
                        "description": "Name of the container registry resource"
                      }
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": "[format('ws-shkv-{0}', parameters('baseName'))]",
                      "metadata": {
                        "description": "Name of the workspace secrets store (shared keyvault) resource"
                      }
                    },
                    "storageAccountName": {
                      "type": "string",
                      "defaultValue": "[replace(format('stws{0}', parameters('baseName')), '-', '')]",
                      "metadata": {
                        "description": "Name of the workspace storage account resource"
                      }
                    },
                    "imageBuildComputeName": {
                      "type": "string",
                      "defaultValue": "image-build-compute",
                      "metadata": {
                        "description": "Name of the cluster used to build images for custom environments (required for private workspaces)"
                      }
                    },
                    "imageBuildComputeSKU": {
                      "type": "string",
                      "defaultValue": "Standard_DS4_v2",
                      "metadata": {
                        "description": "VM size for cluster used to build images"
                      }
                    },
                    "imageBuildComputeNodes": {
                      "type": "int",
                      "defaultValue": 2,
                      "metadata": {
                        "description": "VM nodes for cluster used to build images"
                      }
                    },
                    "createPrivateDNSZones": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Provision new private DNS zones for the workspace dependencies"
                      }
                    },
                    "workspacePublicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ],
                      "metadata": {
                        "description": "WARNING: Enable access to the AzureML workspace using public azure portal (for debugging)"
                      }
                    },
                    "amlPLEStaticIPs": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional: static ip for the PLE to the workspace (3 comma separated needed)"
                      }
                    },
                    "acrPLEStaticIPs": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional: static ip for the ACR to the workspace (2 comma separated needed)"
                      }
                    },
                    "blobPLEStaticIP": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Static IP for the blob storage private endpoint"
                      }
                    },
                    "filePLEStaticIP": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Static IP for the file storage private endpoint"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to curate the resources in Azure."
                      }
                    }
                  },
                  "variables": {
                    "blobStoragePrivateDnsZoneName": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
                    "fileStoragePrivateDnsZoneName": "[format('privatelink.file.{0}', environment().suffixes.storage)]",
                    "keyVaultPrivateDnsZoneName": "[format('privatelink{0}', environment().suffixes.keyvaultDns)]",
                    "acrPrivateDnsZoneName": "[format('privatelink{0}', environment().suffixes.acrLoginServer)]",
                    "amlPrivateDnsZoneNames": {
                      "azureusgovernment": "privatelink.api.ml.azure.us",
                      "azurechinacloud": "privatelink.api.ml.azure.cn",
                      "azurecloud": "privatelink.api.azureml.ms"
                    },
                    "aznbPrivateAznbDnsZoneName": {
                      "azureusgovernment": "privatelink.notebooks.usgovcloudapi.net",
                      "azurechinacloud": "privatelink.notebooks.chinacloudapi.cn",
                      "azurecloud": "privatelink.notebooks.azure.net"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces",
                      "apiVersion": "2022-12-01-preview",
                      "name": "[parameters('machineLearningName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "friendlyName": "[parameters('machineLearningFriendlyName')]",
                        "description": "[parameters('machineLearningDescription')]",
                        "storageAccount": "[reference(resourceId('Microsoft.Resources/deployments', format('st{0}-deployment', parameters('baseName'))), '2020-10-01').outputs.storageId.value]",
                        "keyVault": "[reference(resourceId('Microsoft.Resources/deployments', format('kv-{0}-deployment', parameters('baseName'))), '2020-10-01').outputs.keyvaultId.value]",
                        "containerRegistry": "[reference(resourceId('Microsoft.Resources/deployments', format('cr{0}-deployment', parameters('baseName'))), '2020-10-01').outputs.containerRegistryId.value]",
                        "hbiWorkspace": true,
                        "publicNetworkAccess": "[parameters('workspacePublicNetworkAccess')]",
                        "imageBuildCompute": "[parameters('imageBuildComputeName')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('cr{0}-deployment', parameters('baseName')))]",
                        "[resourceId('Microsoft.Resources/deployments', format('kv-{0}-deployment', parameters('baseName')))]",
                        "[resourceId('Microsoft.Resources/deployments', format('st{0}-deployment', parameters('baseName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.MachineLearningServices/workspaces/computes",
                      "apiVersion": "2022-05-01",
                      "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('imageBuildComputeName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "computeType": "AmlCompute",
                        "computeLocation": "[parameters('location')]",
                        "description": "private cluster for building images",
                        "disableLocalAuth": true,
                        "properties": {
                          "vmPriority": "Dedicated",
                          "vmSize": "[parameters('imageBuildComputeSKU')]",
                          "osType": "Linux",
                          "scaleSettings": {
                            "maxNodeCount": "[parameters('imageBuildComputeNodes')]",
                            "minNodeCount": 0,
                            "nodeIdleTimeBeforeScaleDown": "PT300S"
                          },
                          "subnet": {
                            "id": "[format('{0}/subnets/{1}', parameters('virtualNetworkId'), parameters('computeSubnetName'))]"
                          },
                          "enableNodePublicIp": false,
                          "isolatedNetwork": false,
                          "remoteLoginPortPublicAccess": "Disabled"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-ple-deployment', parameters('machineLearningName')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('createPrivateDNSZones')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-blob-storage-private-dns-zone', parameters('baseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('blobStoragePrivateDnsZoneName')]"
                          },
                          "location": {
                            "value": "global"
                          },
                          "linkToVirtualNetworkId": {
                            "value": "[parameters('virtualNetworkId')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "10720034800950919960"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the private DNS zone"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "global",
                              "metadata": {
                                "description": "Location of the private DNS zone (default: global)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags for curation of resources"
                              }
                            },
                            "linkToVirtualNetworkId": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional: link the private DNS zone to a given virtual network"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "condition": "[not(empty(parameters('linkToVirtualNetworkId')))]",
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('name'), uniqueString(parameters('linkToVirtualNetworkId'), parameters('name'), parameters('location')))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "registrationEnabled": false,
                                "virtualNetwork": {
                                  "id": "[parameters('linkToVirtualNetworkId')]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[parameters('createPrivateDNSZones')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-file-storage-private-dns-zone', parameters('baseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('fileStoragePrivateDnsZoneName')]"
                          },
                          "location": {
                            "value": "global"
                          },
                          "linkToVirtualNetworkId": {
                            "value": "[parameters('virtualNetworkId')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "10720034800950919960"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the private DNS zone"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "global",
                              "metadata": {
                                "description": "Location of the private DNS zone (default: global)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags for curation of resources"
                              }
                            },
                            "linkToVirtualNetworkId": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional: link the private DNS zone to a given virtual network"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "condition": "[not(empty(parameters('linkToVirtualNetworkId')))]",
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('name'), uniqueString(parameters('linkToVirtualNetworkId'), parameters('name'), parameters('location')))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "registrationEnabled": false,
                                "virtualNetwork": {
                                  "id": "[parameters('linkToVirtualNetworkId')]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('st{0}-deployment', parameters('baseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "storageRegion": {
                            "value": "[parameters('location')]"
                          },
                          "storageName": {
                            "value": "[parameters('storageAccountName')]"
                          },
                          "storageSKU": {
                            "value": "Standard_LRS"
                          },
                          "subnetId": {
                            "value": "[format('{0}/subnets/{1}', parameters('virtualNetworkId'), parameters('endpointsSubnetName'))]"
                          },
                          "blobPLEStaticIP": {
                            "value": "[parameters('blobPLEStaticIP')]"
                          },
                          "filePLEStaticIP": {
                            "value": "[parameters('filePLEStaticIP')]"
                          },
                          "blobPrivateDNSZoneName": {
                            "value": "[variables('blobStoragePrivateDnsZoneName')]"
                          },
                          "filePrivateDNSZoneName": {
                            "value": "[variables('fileStoragePrivateDnsZoneName')]"
                          },
                          "publicNetworkAccess": {
                            "value": "[parameters('workspacePublicNetworkAccess')]"
                          },
                          "allowSharedKeyAccess": {
                            "value": true
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "5552208635669755417"
                            }
                          },
                          "parameters": {
                            "storageName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage account"
                              }
                            },
                            "storageRegion": {
                              "type": "string",
                              "metadata": {
                                "description": "Azure region of the storage to create"
                              }
                            },
                            "storageSKU": {
                              "type": "string",
                              "defaultValue": "Standard_LRS",
                              "metadata": {
                                "description": "Storage SKU"
                              },
                              "allowedValues": [
                                "Standard_LRS",
                                "Standard_ZRS",
                                "Standard_GRS",
                                "Standard_GZRS",
                                "Standard_RAGRS",
                                "Standard_RAGZRS",
                                "Premium_LRS",
                                "Premium_ZRS"
                              ]
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnets allowed into this storage"
                              }
                            },
                            "blobPLEStaticIP": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Static IP for the blob storage private endpoint"
                              }
                            },
                            "filePLEStaticIP": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Static IP for the file storage private endpoint"
                              }
                            },
                            "blobPrivateDNSZoneName": {
                              "type": "string",
                              "defaultValue": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
                              "metadata": {
                                "description": "Name of the private DNS zone for blob"
                              }
                            },
                            "filePrivateDNSZoneName": {
                              "type": "string",
                              "defaultValue": "[format('privatelink.file.{0}', environment().suffixes.storage)]",
                              "metadata": {
                                "description": "Name of the private DNS zone for file"
                              }
                            },
                            "publicNetworkAccess": {
                              "type": "string",
                              "defaultValue": "Disabled",
                              "allowedValues": [
                                "Enabled",
                                "Disabled"
                              ],
                              "metadata": {
                                "description": "WARNING: use Enabled for debugging, this will allow public network access to the storage account (eyes-on)."
                              }
                            },
                            "allowSharedKeyAccess": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Allow access using Shared Key (necessary for Azure ML default datastore)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
                            "storageAccountCleanName": "[substring(variables('storageNameCleaned'), 0, min(length(variables('storageNameCleaned')), 24))]",
                            "networkAclsConfig": {
                              "bypass": "AzureServices",
                              "defaultAction": "Deny"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Storage/storageAccounts",
                              "apiVersion": "2022-05-01",
                              "name": "[variables('storageAccountCleanName')]",
                              "location": "[parameters('storageRegion')]",
                              "tags": "[parameters('tags')]",
                              "sku": {
                                "name": "[parameters('storageSKU')]"
                              },
                              "kind": "StorageV2",
                              "properties": {
                                "accessTier": "Hot",
                                "allowBlobPublicAccess": false,
                                "allowCrossTenantReplication": false,
                                "allowedCopyScope": "PrivateLink",
                                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                                "networkAcls": "[if(equals(parameters('publicNetworkAccess'), 'Disabled'), variables('networkAclsConfig'), createObject())]",
                                "encryption": {
                                  "keySource": "Microsoft.Storage",
                                  "requireInfrastructureEncryption": false,
                                  "services": {
                                    "blob": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    },
                                    "file": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    },
                                    "queue": {
                                      "enabled": true,
                                      "keyType": "Service"
                                    },
                                    "table": {
                                      "enabled": true,
                                      "keyType": "Service"
                                    }
                                  }
                                },
                                "isHnsEnabled": false,
                                "isNfsV3Enabled": false,
                                "isLocalUserEnabled": false,
                                "isSftpEnabled": false,
                                "keyPolicy": {
                                  "keyExpirationPeriodInDays": 7
                                },
                                "largeFileSharesState": "Disabled",
                                "minimumTlsVersion": "TLS1_2",
                                "supportsHttpsTrafficOnly": true
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('{0}-endpoint-to-vnet-blob', variables('storageAccountCleanName'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  },
                                  "location": {
                                    "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName')), '2022-05-01', 'full').location]"
                                  },
                                  "resourceServiceId": {
                                    "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                                  },
                                  "pleRootName": {
                                    "value": "[format('ple-{0}-blob-{1}', variables('storageAccountCleanName'), uniqueString(parameters('subnetId')))]"
                                  },
                                  "useStaticIPAddress": {
                                    "value": "[not(empty(parameters('blobPLEStaticIP')))]"
                                  },
                                  "privateIPAddress": {
                                    "value": "[parameters('blobPLEStaticIP')]"
                                  },
                                  "subnetId": {
                                    "value": "[parameters('subnetId')]"
                                  },
                                  "privateDNSZoneName": {
                                    "value": "[parameters('blobPrivateDNSZoneName')]"
                                  },
                                  "groupId": {
                                    "value": "blob"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.14.85.62628",
                                      "templateHash": "9101708035419555637"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]",
                                      "metadata": {
                                        "description": "Azure region of the deployment"
                                      }
                                    },
                                    "resourceServiceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Service ID of the resource to create private link endpoint to"
                                      }
                                    },
                                    "pleRootName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the storage blob private link endpoint"
                                      }
                                    },
                                    "subnetId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Resource ID of the subnet"
                                      }
                                    },
                                    "useStaticIPAddress": {
                                      "type": "bool",
                                      "defaultValue": false,
                                      "metadata": {
                                        "description": "use privateIPAddress to assign a specific static IP address to PLE"
                                      }
                                    },
                                    "privateIPAddress": {
                                      "type": "string",
                                      "defaultValue": "",
                                      "metadata": {
                                        "description": "Specify the private IP address on the subnet."
                                      }
                                    },
                                    "privateDNSZoneName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the existing DNS zone to add the PLE to"
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the DNS zone group to add to the PLE"
                                      }
                                    },
                                    "memberNames": {
                                      "type": "array",
                                      "defaultValue": [
                                        "[parameters('groupId')]"
                                      ],
                                      "metadata": {
                                        "description": "Member names to add to the DNS zone group"
                                      }
                                    },
                                    "tags": {
                                      "type": "object",
                                      "defaultValue": {},
                                      "metadata": {
                                        "description": "Tags to add to the resources"
                                      }
                                    }
                                  },
                                  "variables": {
                                    "copy": [
                                      {
                                        "name": "staticIPConfigs",
                                        "count": "[length(range(0, variables('memberCount')))]",
                                        "input": {
                                          "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                          "properties": {
                                            "groupId": "[parameters('groupId')]",
                                            "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                            "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                          }
                                        }
                                      }
                                    ],
                                    "memberCount": "[length(parameters('memberNames'))]",
                                    "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2022-01-01",
                                      "name": "[parameters('pleRootName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('tags')]",
                                      "properties": {
                                        "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[parameters('pleRootName')]",
                                            "properties": {
                                              "groupIds": [
                                                "[parameters('groupId')]"
                                              ],
                                              "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                              "privateLinkServiceConnectionState": {
                                                "status": "Approved",
                                                "description": "Auto-Approved",
                                                "actionsRequired": "None"
                                              }
                                            }
                                          }
                                        ],
                                        "subnet": {
                                          "id": "[parameters('subnetId')]"
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                      "apiVersion": "2020-06-01",
                                      "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                                      "properties": {
                                        "privateDnsZoneConfigs": [
                                          {
                                            "name": "[parameters('privateDNSZoneName')]",
                                            "properties": {
                                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                            }
                                          }
                                        ]
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                                      ]
                                    }
                                  ],
                                  "outputs": {
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('pleRootName')]"
                                    },
                                    "id": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('{0}-endpoint-to-vnet-file', variables('storageAccountCleanName'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  },
                                  "location": {
                                    "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName')), '2022-05-01', 'full').location]"
                                  },
                                  "resourceServiceId": {
                                    "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                                  },
                                  "pleRootName": {
                                    "value": "[format('ple-{0}-file-{1}', variables('storageAccountCleanName'), uniqueString(parameters('subnetId')))]"
                                  },
                                  "useStaticIPAddress": {
                                    "value": "[not(empty(parameters('filePLEStaticIP')))]"
                                  },
                                  "privateIPAddress": {
                                    "value": "[parameters('filePLEStaticIP')]"
                                  },
                                  "subnetId": {
                                    "value": "[parameters('subnetId')]"
                                  },
                                  "privateDNSZoneName": {
                                    "value": "[parameters('filePrivateDNSZoneName')]"
                                  },
                                  "groupId": {
                                    "value": "file"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.14.85.62628",
                                      "templateHash": "9101708035419555637"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]",
                                      "metadata": {
                                        "description": "Azure region of the deployment"
                                      }
                                    },
                                    "resourceServiceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Service ID of the resource to create private link endpoint to"
                                      }
                                    },
                                    "pleRootName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the storage blob private link endpoint"
                                      }
                                    },
                                    "subnetId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Resource ID of the subnet"
                                      }
                                    },
                                    "useStaticIPAddress": {
                                      "type": "bool",
                                      "defaultValue": false,
                                      "metadata": {
                                        "description": "use privateIPAddress to assign a specific static IP address to PLE"
                                      }
                                    },
                                    "privateIPAddress": {
                                      "type": "string",
                                      "defaultValue": "",
                                      "metadata": {
                                        "description": "Specify the private IP address on the subnet."
                                      }
                                    },
                                    "privateDNSZoneName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the existing DNS zone to add the PLE to"
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the DNS zone group to add to the PLE"
                                      }
                                    },
                                    "memberNames": {
                                      "type": "array",
                                      "defaultValue": [
                                        "[parameters('groupId')]"
                                      ],
                                      "metadata": {
                                        "description": "Member names to add to the DNS zone group"
                                      }
                                    },
                                    "tags": {
                                      "type": "object",
                                      "defaultValue": {},
                                      "metadata": {
                                        "description": "Tags to add to the resources"
                                      }
                                    }
                                  },
                                  "variables": {
                                    "copy": [
                                      {
                                        "name": "staticIPConfigs",
                                        "count": "[length(range(0, variables('memberCount')))]",
                                        "input": {
                                          "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                          "properties": {
                                            "groupId": "[parameters('groupId')]",
                                            "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                            "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                          }
                                        }
                                      }
                                    ],
                                    "memberCount": "[length(parameters('memberNames'))]",
                                    "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2022-01-01",
                                      "name": "[parameters('pleRootName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('tags')]",
                                      "properties": {
                                        "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[parameters('pleRootName')]",
                                            "properties": {
                                              "groupIds": [
                                                "[parameters('groupId')]"
                                              ],
                                              "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                              "privateLinkServiceConnectionState": {
                                                "status": "Approved",
                                                "description": "Auto-Approved",
                                                "actionsRequired": "None"
                                              }
                                            }
                                          }
                                        ],
                                        "subnet": {
                                          "id": "[parameters('subnetId')]"
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                      "apiVersion": "2020-06-01",
                                      "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                                      "properties": {
                                        "privateDnsZoneConfigs": [
                                          {
                                            "name": "[parameters('privateDNSZoneName')]",
                                            "properties": {
                                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                            }
                                          }
                                        ]
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                                      ]
                                    }
                                  ],
                                  "outputs": {
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('pleRootName')]"
                                    },
                                    "id": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "storageId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-blob-storage-private-dns-zone', parameters('baseName')))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-file-storage-private-dns-zone', parameters('baseName')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('createPrivateDNSZones')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-kv-private-dns-zone', parameters('baseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('keyVaultPrivateDnsZoneName')]"
                          },
                          "location": {
                            "value": "global"
                          },
                          "linkToVirtualNetworkId": {
                            "value": "[parameters('virtualNetworkId')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "10720034800950919960"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the private DNS zone"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "global",
                              "metadata": {
                                "description": "Location of the private DNS zone (default: global)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags for curation of resources"
                              }
                            },
                            "linkToVirtualNetworkId": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional: link the private DNS zone to a given virtual network"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "condition": "[not(empty(parameters('linkToVirtualNetworkId')))]",
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('name'), uniqueString(parameters('linkToVirtualNetworkId'), parameters('name'), parameters('location')))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "registrationEnabled": false,
                                "virtualNetwork": {
                                  "id": "[parameters('linkToVirtualNetworkId')]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('kv-{0}-deployment', parameters('baseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "keyvaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "subnetId": {
                            "value": "[format('{0}/subnets/{1}', parameters('virtualNetworkId'), parameters('endpointsSubnetName'))]"
                          },
                          "privateDNSZoneName": {
                            "value": "[variables('keyVaultPrivateDnsZoneName')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "4772676604491049258"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "The Azure Region to deploy the resources into"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to apply to the Key Vault Instance"
                              }
                            },
                            "keyvaultName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the Key Vault"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "The Subnet ID where the Key Vault Private Link is to be created"
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "defaultValue": "[format('privatelink{0}', environment().suffixes.keyvaultDns)]",
                              "metadata": {
                                "description": "Name of the private DNS zone"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.KeyVault/vaults",
                              "apiVersion": "2022-07-01",
                              "name": "[parameters('keyvaultName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "tenantId": "[subscription().tenantId]",
                                "createMode": "default",
                                "sku": {
                                  "name": "standard",
                                  "family": "A"
                                },
                                "enabledForDeployment": false,
                                "enabledForDiskEncryption": true,
                                "enabledForTemplateDeployment": false,
                                "enableRbacAuthorization": true,
                                "enablePurgeProtection": true,
                                "enableSoftDelete": true,
                                "softDeleteRetentionInDays": 7,
                                "publicNetworkAccess": "Disabled",
                                "networkAcls": {
                                  "bypass": "AzureServices",
                                  "defaultAction": "Deny"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('{0}-endpoint-to-vnet', parameters('keyvaultName'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  },
                                  "location": {
                                    "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName')), '2022-07-01', 'full').location]"
                                  },
                                  "resourceServiceId": {
                                    "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                                  },
                                  "pleRootName": {
                                    "value": "[format('ple-{0}', parameters('keyvaultName'))]"
                                  },
                                  "subnetId": {
                                    "value": "[parameters('subnetId')]"
                                  },
                                  "privateDNSZoneName": {
                                    "value": "[parameters('privateDNSZoneName')]"
                                  },
                                  "groupId": {
                                    "value": "vault"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.14.85.62628",
                                      "templateHash": "9101708035419555637"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]",
                                      "metadata": {
                                        "description": "Azure region of the deployment"
                                      }
                                    },
                                    "resourceServiceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Service ID of the resource to create private link endpoint to"
                                      }
                                    },
                                    "pleRootName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the storage blob private link endpoint"
                                      }
                                    },
                                    "subnetId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Resource ID of the subnet"
                                      }
                                    },
                                    "useStaticIPAddress": {
                                      "type": "bool",
                                      "defaultValue": false,
                                      "metadata": {
                                        "description": "use privateIPAddress to assign a specific static IP address to PLE"
                                      }
                                    },
                                    "privateIPAddress": {
                                      "type": "string",
                                      "defaultValue": "",
                                      "metadata": {
                                        "description": "Specify the private IP address on the subnet."
                                      }
                                    },
                                    "privateDNSZoneName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the existing DNS zone to add the PLE to"
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the DNS zone group to add to the PLE"
                                      }
                                    },
                                    "memberNames": {
                                      "type": "array",
                                      "defaultValue": [
                                        "[parameters('groupId')]"
                                      ],
                                      "metadata": {
                                        "description": "Member names to add to the DNS zone group"
                                      }
                                    },
                                    "tags": {
                                      "type": "object",
                                      "defaultValue": {},
                                      "metadata": {
                                        "description": "Tags to add to the resources"
                                      }
                                    }
                                  },
                                  "variables": {
                                    "copy": [
                                      {
                                        "name": "staticIPConfigs",
                                        "count": "[length(range(0, variables('memberCount')))]",
                                        "input": {
                                          "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                          "properties": {
                                            "groupId": "[parameters('groupId')]",
                                            "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                            "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                          }
                                        }
                                      }
                                    ],
                                    "memberCount": "[length(parameters('memberNames'))]",
                                    "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2022-01-01",
                                      "name": "[parameters('pleRootName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('tags')]",
                                      "properties": {
                                        "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[parameters('pleRootName')]",
                                            "properties": {
                                              "groupIds": [
                                                "[parameters('groupId')]"
                                              ],
                                              "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                              "privateLinkServiceConnectionState": {
                                                "status": "Approved",
                                                "description": "Auto-Approved",
                                                "actionsRequired": "None"
                                              }
                                            }
                                          }
                                        ],
                                        "subnet": {
                                          "id": "[parameters('subnetId')]"
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                      "apiVersion": "2020-06-01",
                                      "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                                      "properties": {
                                        "privateDnsZoneConfigs": [
                                          {
                                            "name": "[parameters('privateDNSZoneName')]",
                                            "properties": {
                                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                            }
                                          }
                                        ]
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                                      ]
                                    }
                                  ],
                                  "outputs": {
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('pleRootName')]"
                                    },
                                    "id": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "keyvaultId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-kv-private-dns-zone', parameters('baseName')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('createPrivateDNSZones')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-acr-private-dns-zone', parameters('baseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('acrPrivateDnsZoneName')]"
                          },
                          "location": {
                            "value": "global"
                          },
                          "linkToVirtualNetworkId": {
                            "value": "[parameters('virtualNetworkId')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "10720034800950919960"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the private DNS zone"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "global",
                              "metadata": {
                                "description": "Location of the private DNS zone (default: global)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags for curation of resources"
                              }
                            },
                            "linkToVirtualNetworkId": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional: link the private DNS zone to a given virtual network"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "condition": "[not(empty(parameters('linkToVirtualNetworkId')))]",
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('name'), uniqueString(parameters('linkToVirtualNetworkId'), parameters('name'), parameters('location')))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "registrationEnabled": false,
                                "virtualNetwork": {
                                  "id": "[parameters('linkToVirtualNetworkId')]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('cr{0}-deployment', parameters('baseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "containerRegistryName": {
                            "value": "[parameters('containerRegistryName')]"
                          },
                          "subnetId": {
                            "value": "[format('{0}/subnets/{1}', parameters('virtualNetworkId'), parameters('endpointsSubnetName'))]"
                          },
                          "privateDNSZoneName": {
                            "value": "[variables('acrPrivateDnsZoneName')]"
                          },
                          "acrPLEStaticIPs": {
                            "value": "[parameters('acrPLEStaticIPs')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "12201711343277097395"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            },
                            "containerRegistryName": {
                              "type": "string",
                              "metadata": {
                                "description": "Container registry name"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "defaultValue": "[format('privatelink{0}', environment().suffixes.acrLoginServer)]",
                              "metadata": {
                                "description": "Name of the private DNS zone"
                              }
                            },
                            "acrPLEStaticIPs": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional: static IPs for the 2 PLEs (comma separated)"
                              }
                            }
                          },
                          "variables": {
                            "containerRegistryNameCleaned": "[replace(parameters('containerRegistryName'), '-', '')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ContainerRegistry/registries",
                              "apiVersion": "2021-09-01",
                              "name": "[variables('containerRegistryNameCleaned')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "sku": {
                                "name": "Premium"
                              },
                              "properties": {
                                "adminUserEnabled": true,
                                "dataEndpointEnabled": false,
                                "networkRuleBypassOptions": "AzureServices",
                                "networkRuleSet": {
                                  "defaultAction": "Deny"
                                },
                                "policies": {
                                  "quarantinePolicy": {
                                    "status": "disabled"
                                  },
                                  "retentionPolicy": {
                                    "status": "enabled",
                                    "days": 7
                                  },
                                  "trustPolicy": {
                                    "status": "disabled",
                                    "type": "Notary"
                                  }
                                },
                                "publicNetworkAccess": "Disabled",
                                "zoneRedundancy": "Disabled"
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('{0}-endpoint-to-vnet', variables('containerRegistryNameCleaned'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "resourceServiceId": {
                                    "value": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
                                  },
                                  "pleRootName": {
                                    "value": "[format('ple-{0}', variables('containerRegistryNameCleaned'))]"
                                  },
                                  "subnetId": {
                                    "value": "[parameters('subnetId')]"
                                  },
                                  "privateDNSZoneName": {
                                    "value": "[parameters('privateDNSZoneName')]"
                                  },
                                  "groupId": {
                                    "value": "registry"
                                  },
                                  "memberNames": {
                                    "value": [
                                      "registry",
                                      "[format('registry_data_{0}', parameters('location'))]"
                                    ]
                                  },
                                  "useStaticIPAddress": {
                                    "value": "[not(empty(parameters('acrPLEStaticIPs')))]"
                                  },
                                  "privateIPAddress": {
                                    "value": "[parameters('acrPLEStaticIPs')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.14.85.62628",
                                      "templateHash": "9101708035419555637"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]",
                                      "metadata": {
                                        "description": "Azure region of the deployment"
                                      }
                                    },
                                    "resourceServiceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Service ID of the resource to create private link endpoint to"
                                      }
                                    },
                                    "pleRootName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the storage blob private link endpoint"
                                      }
                                    },
                                    "subnetId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Resource ID of the subnet"
                                      }
                                    },
                                    "useStaticIPAddress": {
                                      "type": "bool",
                                      "defaultValue": false,
                                      "metadata": {
                                        "description": "use privateIPAddress to assign a specific static IP address to PLE"
                                      }
                                    },
                                    "privateIPAddress": {
                                      "type": "string",
                                      "defaultValue": "",
                                      "metadata": {
                                        "description": "Specify the private IP address on the subnet."
                                      }
                                    },
                                    "privateDNSZoneName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the existing DNS zone to add the PLE to"
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the DNS zone group to add to the PLE"
                                      }
                                    },
                                    "memberNames": {
                                      "type": "array",
                                      "defaultValue": [
                                        "[parameters('groupId')]"
                                      ],
                                      "metadata": {
                                        "description": "Member names to add to the DNS zone group"
                                      }
                                    },
                                    "tags": {
                                      "type": "object",
                                      "defaultValue": {},
                                      "metadata": {
                                        "description": "Tags to add to the resources"
                                      }
                                    }
                                  },
                                  "variables": {
                                    "copy": [
                                      {
                                        "name": "staticIPConfigs",
                                        "count": "[length(range(0, variables('memberCount')))]",
                                        "input": {
                                          "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                          "properties": {
                                            "groupId": "[parameters('groupId')]",
                                            "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                            "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                          }
                                        }
                                      }
                                    ],
                                    "memberCount": "[length(parameters('memberNames'))]",
                                    "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2022-01-01",
                                      "name": "[parameters('pleRootName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('tags')]",
                                      "properties": {
                                        "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[parameters('pleRootName')]",
                                            "properties": {
                                              "groupIds": [
                                                "[parameters('groupId')]"
                                              ],
                                              "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                              "privateLinkServiceConnectionState": {
                                                "status": "Approved",
                                                "description": "Auto-Approved",
                                                "actionsRequired": "None"
                                              }
                                            }
                                          }
                                        ],
                                        "subnet": {
                                          "id": "[parameters('subnetId')]"
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                      "apiVersion": "2020-06-01",
                                      "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                                      "properties": {
                                        "privateDnsZoneConfigs": [
                                          {
                                            "name": "[parameters('privateDNSZoneName')]",
                                            "properties": {
                                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                            }
                                          }
                                        ]
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                                      ]
                                    }
                                  ],
                                  "outputs": {
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('pleRootName')]"
                                    },
                                    "id": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "containerRegistryId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-perms-deployment', parameters('imageBuildComputeName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "storageAccountName": {
                            "value": "[parameters('storageAccountName')]"
                          },
                          "identityPrincipalId": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('machineLearningName'), parameters('imageBuildComputeName')), '2022-05-01', 'full').identity.principalId]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "7765934047439622108"
                            }
                          },
                          "parameters": {
                            "storageAccountName": {
                              "type": "string",
                              "metadata": {
                                "description": "Full path to storage"
                              }
                            },
                            "identityPrincipalId": {
                              "type": "string",
                              "metadata": {
                                "description": "PrincipalId of the managed identity"
                              }
                            },
                            "computeToStorageRoles": {
                              "type": "array",
                              "defaultValue": [
                                "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                                "81a9662b-bebf-436f-a333-f67b29880f12",
                                "c12c1c16-33a1-487b-954d-41c89c60f349"
                              ],
                              "metadata": {
                                "description": "Role definition IDs for the compute towards the internal storage"
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "roleAssignments",
                                "count": "[length(parameters('computeToStorageRoles'))]"
                              },
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
                              "name": "[guid(resourceGroup().id, resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('identityPrincipalId'), parameters('computeToStorageRoles')[copyIndex()])]",
                              "properties": {
                                "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, parameters('computeToStorageRoles')[copyIndex()])]",
                                "principalId": "[parameters('identityPrincipalId')]",
                                "principalType": "ServicePrincipal"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('machineLearningName'), parameters('imageBuildComputeName'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('st{0}-deployment', parameters('baseName')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('createPrivateDNSZones')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-aml-private-dns-zone', parameters('baseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('amlPrivateDnsZoneNames')[toLower(environment().name)]]"
                          },
                          "location": {
                            "value": "global"
                          },
                          "linkToVirtualNetworkId": {
                            "value": "[parameters('virtualNetworkId')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "10720034800950919960"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the private DNS zone"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "global",
                              "metadata": {
                                "description": "Location of the private DNS zone (default: global)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags for curation of resources"
                              }
                            },
                            "linkToVirtualNetworkId": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional: link the private DNS zone to a given virtual network"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "condition": "[not(empty(parameters('linkToVirtualNetworkId')))]",
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('name'), uniqueString(parameters('linkToVirtualNetworkId'), parameters('name'), parameters('location')))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "registrationEnabled": false,
                                "virtualNetwork": {
                                  "id": "[parameters('linkToVirtualNetworkId')]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[parameters('createPrivateDNSZones')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-aznb-private-dns-zone', parameters('baseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('aznbPrivateAznbDnsZoneName')[toLower(environment().name)]]"
                          },
                          "location": {
                            "value": "global"
                          },
                          "linkToVirtualNetworkId": {
                            "value": "[parameters('virtualNetworkId')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "10720034800950919960"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the private DNS zone"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "global",
                              "metadata": {
                                "description": "Location of the private DNS zone (default: global)"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags for curation of resources"
                              }
                            },
                            "linkToVirtualNetworkId": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional: link the private DNS zone to a given virtual network"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones",
                              "apiVersion": "2020-06-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "condition": "[not(empty(parameters('linkToVirtualNetworkId')))]",
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('name'), uniqueString(parameters('linkToVirtualNetworkId'), parameters('name'), parameters('location')))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "registrationEnabled": false,
                                "virtualNetwork": {
                                  "id": "[parameters('linkToVirtualNetworkId')]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-ple-deployment', parameters('machineLearningName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName')), '2022-12-01-preview', 'full').location]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}', parameters('machineLearningName'))]"
                          },
                          "resourceServiceId": {
                            "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName'))]"
                          },
                          "subnetId": {
                            "value": "[format('{0}/subnets/{1}', parameters('virtualNetworkId'), parameters('endpointsSubnetName'))]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('amlPLEStaticIPs')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('amlPLEStaticIPs')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aml-private-dns-zone', parameters('baseName'))), '2020-10-01').outputs.name.value]"
                          },
                          "groupId": {
                            "value": "amlworkspace"
                          },
                          "memberNames": {
                            "value": [
                              "default",
                              "notebook",
                              "inference"
                            ]
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-aml-private-dns-zone', parameters('baseName')))]",
                        "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "workspaceName": {
                      "type": "string",
                      "value": "[parameters('machineLearningName')]"
                    },
                    "region": {
                      "type": "string",
                      "value": "[parameters('location')]"
                    },
                    "workspaceSecretStoreId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('kv-{0}-deployment', parameters('baseName'))), '2020-10-01').outputs.keyvaultId.value]"
                    },
                    "workspaceSecretStoreName": {
                      "type": "string",
                      "value": "[parameters('keyVaultName')]"
                    },
                    "workspaceStorageServiceId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('st{0}-deployment', parameters('baseName'))), '2020-10-01').outputs.storageId.value]"
                    },
                    "workspaceStorageName": {
                      "type": "string",
                      "value": "[parameters('storageAccountName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('vnet-{0}-deployment', parameters('demoBaseName')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-orchestrator-pair', parameters('demoBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "machineLearningName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))), '2020-10-01').outputs.workspaceName.value]"
                  },
                  "machineLearningRegion": {
                    "value": "[parameters('orchestratorRegion')]"
                  },
                  "machineLearningIsPrivate": {
                    "value": true
                  },
                  "pairRegion": {
                    "value": "[parameters('orchestratorRegion')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "pairBaseName": {
                    "value": "[format('{0}-orch', parameters('demoBaseName'))]"
                  },
                  "compute1Name": {
                    "value": "orchestrator-01"
                  },
                  "compute1SKU": {
                    "value": "[parameters('compute1SKU')]"
                  },
                  "computeNodes": {
                    "value": 2
                  },
                  "compute2": {
                    "value": "[parameters('compute2')]"
                  },
                  "compute2SKU": {
                    "value": "[parameters('compute2SKU')]"
                  },
                  "compute2Name": {
                    "value": "orchestrator-02"
                  },
                  "storageAccountName": {
                    "value": "[variables('orchestratorStorageAccountCleanName')]"
                  },
                  "datastoreName": {
                    "value": "datastore_orchestrator"
                  },
                  "applyDefaultPermissions": {
                    "value": true
                  },
                  "vnetResourceName": {
                    "value": "[format('vnet-{0}-orch', parameters('demoBaseName'))]"
                  },
                  "vnetAddressPrefix": {
                    "value": "10.0.0.0/16"
                  },
                  "computeSubnetPrefix": {
                    "value": "10.0.1.0/24"
                  },
                  "endpointsSubnetPrefix": {
                    "value": "10.0.0.0/24"
                  },
                  "amlPLEStaticIPs": {
                    "value": "10.0.0.240,10.0.0.241,10.0.0.242"
                  },
                  "storagePLEStaticIP": {
                    "value": "10.0.0.243"
                  },
                  "enableNodePublicIp": {
                    "value": false
                  },
                  "storagePublicNetworkAccess": "[if(equals(parameters('orchestratorStorageNetworkAccess'), 'public'), createObject('value', 'Enabled'), createObject('value', 'Disabled'))]",
                  "blobPrivateDNSZoneName": {
                    "value": "[format('privatelink.blob.{0}', environment().suffixes.storage)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "14090691852766171529"
                    }
                  },
                  "parameters": {
                    "machineLearningName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of AzureML workspace to attach compute+storage to."
                      }
                    },
                    "machineLearningRegion": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The region of the machine learning workspace"
                      }
                    },
                    "machineLearningIsPrivate": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set true to provision PLEs necessary for private workspace to interact with the pair"
                      }
                    },
                    "pairRegion": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Specifies the location of the pair resources."
                      }
                    },
                    "pairBaseName": {
                      "type": "string",
                      "metadata": {
                        "description": "Base name used for creating all pair resources."
                      }
                    },
                    "storageAccountName": {
                      "type": "string",
                      "defaultValue": "[replace(format('st{0}', parameters('pairBaseName')), '-', '')]",
                      "metadata": {
                        "description": "Name of the storage account resource to create for the pair"
                      }
                    },
                    "datastoreName": {
                      "type": "string",
                      "defaultValue": "[replace(format('datastore_{0}', parameters('pairBaseName')), '-', '_')]",
                      "metadata": {
                        "description": "Name of the datastore for attaching the storage to the AzureML workspace."
                      }
                    },
                    "compute1Name": {
                      "type": "string",
                      "defaultValue": "[format('{0}-01', parameters('pairBaseName'))]",
                      "metadata": {
                        "description": "Name of the default compute cluster for the pair"
                      }
                    },
                    "compute1SKU": {
                      "type": "string",
                      "defaultValue": "Standard_DS3_v2",
                      "metadata": {
                        "description": "VM size for the compute cluster"
                      }
                    },
                    "computeNodes": {
                      "type": "int",
                      "defaultValue": 4,
                      "metadata": {
                        "description": "VM nodes for the default compute cluster"
                      }
                    },
                    "compute2": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Flag whether to create a second compute or not"
                      }
                    },
                    "compute2SKU": {
                      "type": "string",
                      "defaultValue": "Standard_DS3_v2",
                      "metadata": {
                        "description": "The second VM used for creating compute clusters in orchestrator and silos."
                      }
                    },
                    "compute2Name": {
                      "type": "string",
                      "defaultValue": "[format('{0}-02', parameters('pairBaseName'))]",
                      "metadata": {
                        "description": "Name of the second compute cluster for the pair"
                      }
                    },
                    "jobsUaiName": {
                      "type": "string",
                      "defaultValue": "[format('uai-jobs-{0}', parameters('pairBaseName'))]",
                      "metadata": {
                        "description": "Name of the UAI for the jobs running in the pair"
                      }
                    },
                    "nsgResourceName": {
                      "type": "string",
                      "defaultValue": "[format('nsg-{0}', parameters('pairBaseName'))]",
                      "metadata": {
                        "description": "Name of the Network Security Group resource"
                      }
                    },
                    "vnetResourceName": {
                      "type": "string",
                      "defaultValue": "[format('vnet-{0}', parameters('pairBaseName'))]",
                      "metadata": {
                        "description": "Name of the vNET resource"
                      }
                    },
                    "vnetAddressPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.0.0/16",
                      "metadata": {
                        "description": "Virtual network address prefix"
                      }
                    },
                    "computeSubnetPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.1.0/24",
                      "metadata": {
                        "description": "Subnet address prefix"
                      }
                    },
                    "endpointsSubnetPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.0.0/24",
                      "metadata": {
                        "description": "Subnet address prefix"
                      }
                    },
                    "storagePLEStaticIP": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional: static ip for the pair blob storage PLE"
                      }
                    },
                    "createMachineLearningPLE": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Create a PLE for the machine learning workspace (if machineLearningIsPrivate=true)"
                      }
                    },
                    "amlPLEStaticIPs": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional: static ip for the PLE to the workspace (if machineLearningIsPrivate=true)"
                      }
                    },
                    "allowedSubnetIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Allow other subnets into the storage (need to be in the same region)"
                      }
                    },
                    "enableNodePublicIp": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Enable compute node public IP"
                      }
                    },
                    "storagePublicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "metadata": {
                        "description": "Allow or disallow public network access to Storage Account."
                      },
                      "allowedValues": [
                        "Enabled",
                        "vNetOnly",
                        "Disabled"
                      ]
                    },
                    "applyDefaultPermissions": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Allow compute cluster to access storage account with R/W permissions (using UAI)"
                      }
                    },
                    "blobPrivateDNSZoneName": {
                      "type": "string",
                      "defaultValue": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
                      "metadata": {
                        "description": "Name of the private DNS zone for blob"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to curate the resources in Azure."
                      }
                    }
                  },
                  "variables": {
                    "amlPrivateDnsZoneNames": {
                      "azureusgovernment": "privatelink.api.ml.azure.us",
                      "azurechinacloud": "privatelink.api.ml.azure.cn",
                      "azurecloud": "privatelink.api.azureml.ms"
                    },
                    "amlPrivateDnsZoneName": "[variables('amlPrivateDnsZoneNames')[toLower(environment().name)]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2022-01-31-preview",
                      "name": "[parameters('jobsUaiName')]",
                      "location": "[parameters('pairRegion')]",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "condition": "[and(parameters('machineLearningIsPrivate'), parameters('createMachineLearningPLE'))]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('amlPrivateDnsZoneName'), uniqueString(subscription().id, resourceGroup().id, parameters('vnetResourceName'), variables('amlPrivateDnsZoneName'), 'global'))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('blobPrivateDNSZoneName'), uniqueString(format('{0}-deployment', parameters('vnetResourceName')), parameters('blobPrivateDNSZoneName'), 'global'))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-deployment', parameters('nsgResourceName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "nsgName": {
                            "value": "[parameters('nsgResourceName')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "workspaceRegion": {
                            "value": "[parameters('machineLearningRegion')]"
                          },
                          "enableNodePublicIp": {
                            "value": "[parameters('enableNodePublicIp')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9356966489364776969"
                            }
                          },
                          "parameters": {
                            "nsgName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the network security group"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "workspaceRegion": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Region of the AzureML workspace"
                              }
                            },
                            "enableNodePublicIp": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set rules to allow for compute with public IP"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkSecurityGroups",
                              "apiVersion": "2022-07-01",
                              "name": "[parameters('nsgName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "condition": "[parameters('enableNodePublicIp')]",
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureMLPublicIPInbound')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "44224",
                                "sourceAddressPrefix": "AzureMachineLearning",
                                "destinationAddressPrefix": "*",
                                "access": "Allow",
                                "priority": 130,
                                "direction": "Inbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureMLOutboundTcp')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [
                                  "443",
                                  "8787",
                                  "18881"
                                ],
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "AzureMachineLearning",
                                "access": "Allow",
                                "priority": 140,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureMLOutboundUdp')]",
                              "properties": {
                                "protocol": "Udp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "5831",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "AzureMachineLearning",
                                "access": "Allow",
                                "priority": 150,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'BatchNodeManagementOutbound')]",
                              "properties": {
                                "protocol": "*",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "[format('BatchNodeManagement.{0}', parameters('workspaceRegion'))]",
                                "access": "Allow",
                                "priority": 160,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'OrchestratorStorageAccount')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "[format('Storage.{0}', parameters('workspaceRegion'))]",
                                "access": "Allow",
                                "priority": 170,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'SiloStorageAccount')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "[format('Storage.{0}', parameters('location'))]",
                                "access": "Allow",
                                "priority": 171,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureActiveDirectory')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "*",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "AzureActiveDirectory",
                                "access": "Allow",
                                "priority": 180,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureFrontDoor')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "AzureFrontDoor.FrontEnd",
                                "access": "Allow",
                                "priority": 190,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureContainerRegistryOrch')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "[format('AzureContainerRegistry.{0}', parameters('workspaceRegion'))]",
                                "access": "Allow",
                                "priority": 200,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureContainerRegistrySilo')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "[format('AzureContainerRegistry.{0}', parameters('location'))]",
                                "access": "Allow",
                                "priority": 201,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'MicrosoftContainerRegistry')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "VirtualNetwork",
                                "destinationAddressPrefix": "MicrosoftContainerRegistry",
                                "access": "Allow",
                                "priority": 210,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-deployment', parameters('vnetResourceName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "virtualNetworkName": {
                            "value": "[parameters('vnetResourceName')]"
                          },
                          "networkSecurityGroupId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('nsgResourceName'))), '2020-10-01').outputs.id.value]"
                          },
                          "vnetAddressPrefix": {
                            "value": "[parameters('vnetAddressPrefix')]"
                          },
                          "subnets": {
                            "value": [
                              {
                                "name": "compute",
                                "addressPrefix": "[parameters('computeSubnetPrefix')]"
                              },
                              {
                                "name": "endpoints",
                                "addressPrefix": "[parameters('endpointsSubnetPrefix')]"
                              }
                            ]
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "12102256299858550532"
                            }
                          },
                          "parameters": {
                            "virtualNetworkName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the virtual network resource"
                              }
                            },
                            "networkSecurityGroupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Group ID of the network security group"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "vnetAddressPrefix": {
                              "type": "string",
                              "defaultValue": "10.0.0.0/16",
                              "metadata": {
                                "description": "Virtual network address prefix"
                              }
                            },
                            "subnets": {
                              "type": "array",
                              "defaultValue": [
                                {
                                  "name": "snet-training",
                                  "addressPrefix": "10.0.0.0/24"
                                }
                              ],
                              "metadata": {
                                "description": "Training subnets names and address prefix"
                              }
                            },
                            "serviceEndpoints": {
                              "type": "array",
                              "defaultValue": [
                                "Microsoft.KeyVault",
                                "Microsoft.ContainerRegistry",
                                "Microsoft.Storage"
                              ],
                              "metadata": {
                                "description": "List of service endpoints expected on this vnet"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "serviceEndpointsDefinition",
                                "count": "[length(parameters('serviceEndpoints'))]",
                                "input": {
                                  "service": "[parameters('serviceEndpoints')[copyIndex('serviceEndpointsDefinition')]]"
                                }
                              },
                              {
                                "name": "subnetsDefinition",
                                "count": "[length(parameters('subnets'))]",
                                "input": {
                                  "name": "[parameters('subnets')[copyIndex('subnetsDefinition')].name]",
                                  "properties": {
                                    "addressPrefix": "[parameters('subnets')[copyIndex('subnetsDefinition')].addressPrefix]",
                                    "privateEndpointNetworkPolicies": "Disabled",
                                    "privateLinkServiceNetworkPolicies": "Disabled",
                                    "serviceEndpoints": "[variables('serviceEndpointsDefinition')]",
                                    "networkSecurityGroup": {
                                      "id": "[parameters('networkSecurityGroupId')]"
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('virtualNetworkName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "addressSpace": {
                                  "addressPrefixes": [
                                    "[parameters('vnetAddressPrefix')]"
                                  ]
                                },
                                "subnets": "[variables('subnetsDefinition')]"
                              }
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('virtualNetworkName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('nsgResourceName')))]"
                      ]
                    },
                    {
                      "condition": "[and(parameters('machineLearningIsPrivate'), parameters('createMachineLearningPLE'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-{1}-ple-deployment', parameters('machineLearningName'), parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}-{1}', parameters('machineLearningName'), parameters('pairBaseName'))]"
                          },
                          "resourceServiceId": {
                            "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName'))]"
                          },
                          "subnetId": {
                            "value": "[format('{0}/subnets/endpoints', reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value)]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('amlPLEStaticIPs')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('amlPLEStaticIPs')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[variables('amlPrivateDnsZoneName')]"
                          },
                          "groupId": {
                            "value": "amlworkspace"
                          },
                          "memberNames": {
                            "value": [
                              "default",
                              "notebook",
                              "inference"
                            ]
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('amlPrivateDnsZoneName'), uniqueString(subscription().id, resourceGroup().id, parameters('vnetResourceName'), variables('amlPrivateDnsZoneName'), 'global'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-vnet-aml-compute-01', parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "machineLearningName": {
                            "value": "[parameters('machineLearningName')]"
                          },
                          "machineLearningRegion": {
                            "value": "[parameters('machineLearningRegion')]"
                          },
                          "computeName": {
                            "value": "[parameters('compute1Name')]"
                          },
                          "computeRegion": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "computeSKU": {
                            "value": "[parameters('compute1SKU')]"
                          },
                          "computeNodes": {
                            "value": "[parameters('computeNodes')]"
                          },
                          "computeIdentityType": {
                            "value": "UserAssigned"
                          },
                          "computeUaiName": {
                            "value": "[parameters('jobsUaiName')]"
                          },
                          "subnetName": {
                            "value": "compute"
                          },
                          "vnetId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value]"
                          },
                          "enableNodePublicIp": {
                            "value": "[parameters('enableNodePublicIp')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "5294871759130614635"
                            }
                          },
                          "parameters": {
                            "machineLearningName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of AzureML workspace to attach compute+storage to."
                              }
                            },
                            "machineLearningRegion": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "The region of the machine learning workspace"
                              }
                            },
                            "computeName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the compute cluster to create"
                              }
                            },
                            "computeRegion": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the location of the compute resources."
                              }
                            },
                            "computeSKU": {
                              "type": "string",
                              "defaultValue": "Standard_DS3_v2",
                              "metadata": {
                                "description": "VM size for the default compute cluster"
                              }
                            },
                            "computeNodes": {
                              "type": "int",
                              "defaultValue": 4,
                              "metadata": {
                                "description": "VM nodes for the default compute cluster"
                              }
                            },
                            "computeIdentityType": {
                              "type": "string",
                              "defaultValue": "UserAssigned",
                              "allowedValues": [
                                "UserAssigned",
                                "SystemAssigned"
                              ]
                            },
                            "computeUaiName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the UAI for the compute cluster (if computeIdentityType==UserAssigned)"
                              }
                            },
                            "vnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "virtual network ID"
                              }
                            },
                            "subnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "Subnet name"
                              }
                            },
                            "enableNodePublicIp": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Enable compute node public IP"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to curate the resources in Azure."
                              }
                            }
                          },
                          "variables": {
                            "userAssignedIdentities": "[if(equals(parameters('computeIdentityType'), 'SystemAssigned'), null(), createObject(format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{2}', subscription().subscriptionId, resourceGroup().name, parameters('computeUaiName')), createObject()))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.MachineLearningServices/workspaces/computes",
                              "apiVersion": "2021-07-01",
                              "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('computeName'))]",
                              "location": "[parameters('machineLearningRegion')]",
                              "tags": "[parameters('tags')]",
                              "identity": {
                                "type": "[parameters('computeIdentityType')]",
                                "userAssignedIdentities": "[variables('userAssignedIdentities')]"
                              },
                              "properties": {
                                "computeType": "AmlCompute",
                                "computeLocation": "[parameters('computeRegion')]",
                                "disableLocalAuth": true,
                                "properties": {
                                  "vmPriority": "Dedicated",
                                  "vmSize": "[parameters('computeSKU')]",
                                  "osType": "Linux",
                                  "scaleSettings": {
                                    "maxNodeCount": "[parameters('computeNodes')]",
                                    "minNodeCount": 0,
                                    "nodeIdleTimeBeforeScaleDown": "PT300S"
                                  },
                                  "enableNodePublicIp": "[parameters('enableNodePublicIp')]",
                                  "isolatedNetwork": false,
                                  "remoteLoginPortPublicAccess": "Disabled",
                                  "subnet": {
                                    "id": "[format('{0}/subnets/{1}', parameters('vnetId'), parameters('subnetName'))]"
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(equals(parameters('computeIdentityType'), 'UserAssigned'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('computeUaiName')), '2022-01-31-preview').principalId, reference(resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('machineLearningName'), parameters('computeName')), '2021-07-01', 'full').identity.principalId)]"
                            },
                            "compute": {
                              "type": "string",
                              "value": "[parameters('computeName')]"
                            },
                            "region": {
                              "type": "string",
                              "value": "[parameters('computeRegion')]"
                            },
                            "subnetName": {
                              "type": "string",
                              "value": "[parameters('subnetName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('jobsUaiName'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('compute2')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-vnet-aml-compute-02', parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "machineLearningName": {
                            "value": "[parameters('machineLearningName')]"
                          },
                          "machineLearningRegion": {
                            "value": "[parameters('machineLearningRegion')]"
                          },
                          "computeName": {
                            "value": "[parameters('compute2Name')]"
                          },
                          "computeRegion": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "computeSKU": {
                            "value": "[parameters('compute2SKU')]"
                          },
                          "computeNodes": {
                            "value": "[parameters('computeNodes')]"
                          },
                          "computeIdentityType": {
                            "value": "UserAssigned"
                          },
                          "computeUaiName": {
                            "value": "[parameters('jobsUaiName')]"
                          },
                          "subnetName": {
                            "value": "compute"
                          },
                          "vnetId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value]"
                          },
                          "enableNodePublicIp": {
                            "value": "[parameters('enableNodePublicIp')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "5294871759130614635"
                            }
                          },
                          "parameters": {
                            "machineLearningName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of AzureML workspace to attach compute+storage to."
                              }
                            },
                            "machineLearningRegion": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "The region of the machine learning workspace"
                              }
                            },
                            "computeName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the compute cluster to create"
                              }
                            },
                            "computeRegion": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the location of the compute resources."
                              }
                            },
                            "computeSKU": {
                              "type": "string",
                              "defaultValue": "Standard_DS3_v2",
                              "metadata": {
                                "description": "VM size for the default compute cluster"
                              }
                            },
                            "computeNodes": {
                              "type": "int",
                              "defaultValue": 4,
                              "metadata": {
                                "description": "VM nodes for the default compute cluster"
                              }
                            },
                            "computeIdentityType": {
                              "type": "string",
                              "defaultValue": "UserAssigned",
                              "allowedValues": [
                                "UserAssigned",
                                "SystemAssigned"
                              ]
                            },
                            "computeUaiName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the UAI for the compute cluster (if computeIdentityType==UserAssigned)"
                              }
                            },
                            "vnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "virtual network ID"
                              }
                            },
                            "subnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "Subnet name"
                              }
                            },
                            "enableNodePublicIp": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Enable compute node public IP"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to curate the resources in Azure."
                              }
                            }
                          },
                          "variables": {
                            "userAssignedIdentities": "[if(equals(parameters('computeIdentityType'), 'SystemAssigned'), null(), createObject(format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{2}', subscription().subscriptionId, resourceGroup().name, parameters('computeUaiName')), createObject()))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.MachineLearningServices/workspaces/computes",
                              "apiVersion": "2021-07-01",
                              "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('computeName'))]",
                              "location": "[parameters('machineLearningRegion')]",
                              "tags": "[parameters('tags')]",
                              "identity": {
                                "type": "[parameters('computeIdentityType')]",
                                "userAssignedIdentities": "[variables('userAssignedIdentities')]"
                              },
                              "properties": {
                                "computeType": "AmlCompute",
                                "computeLocation": "[parameters('computeRegion')]",
                                "disableLocalAuth": true,
                                "properties": {
                                  "vmPriority": "Dedicated",
                                  "vmSize": "[parameters('computeSKU')]",
                                  "osType": "Linux",
                                  "scaleSettings": {
                                    "maxNodeCount": "[parameters('computeNodes')]",
                                    "minNodeCount": 0,
                                    "nodeIdleTimeBeforeScaleDown": "PT300S"
                                  },
                                  "enableNodePublicIp": "[parameters('enableNodePublicIp')]",
                                  "isolatedNetwork": false,
                                  "remoteLoginPortPublicAccess": "Disabled",
                                  "subnet": {
                                    "id": "[format('{0}/subnets/{1}', parameters('vnetId'), parameters('subnetName'))]"
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(equals(parameters('computeIdentityType'), 'UserAssigned'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('computeUaiName')), '2022-01-31-preview').principalId, reference(resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('machineLearningName'), parameters('computeName')), '2021-07-01', 'full').identity.principalId)]"
                            },
                            "compute": {
                              "type": "string",
                              "value": "[parameters('computeName')]"
                            },
                            "region": {
                              "type": "string",
                              "value": "[parameters('computeRegion')]"
                            },
                            "subnetName": {
                              "type": "string",
                              "value": "[parameters('subnetName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('jobsUaiName'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-vnet-storage', parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "machineLearningName": {
                            "value": "[parameters('machineLearningName')]"
                          },
                          "machineLearningRegion": {
                            "value": "[parameters('machineLearningRegion')]"
                          },
                          "storageName": {
                            "value": "[parameters('storageAccountName')]"
                          },
                          "storageRegion": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "datastoreName": {
                            "value": "[parameters('datastoreName')]"
                          },
                          "publicNetworkAccess": {
                            "value": "[parameters('storagePublicNetworkAccess')]"
                          },
                          "subnetIds": {
                            "value": "[concat(createArray(format('{0}/subnets/endpoints', reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value)), parameters('allowedSubnetIds'))]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "3521838058917601730"
                            }
                          },
                          "parameters": {
                            "machineLearningName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of AzureML workspace to attach compute+storage to."
                              }
                            },
                            "machineLearningRegion": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "The region of the machine learning workspace"
                              }
                            },
                            "storageName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage account"
                              }
                            },
                            "storageRegion": {
                              "type": "string",
                              "metadata": {
                                "description": "Azure region of the storage to create"
                              }
                            },
                            "storageSKU": {
                              "type": "string",
                              "defaultValue": "Standard_LRS",
                              "metadata": {
                                "description": "Storage SKU"
                              },
                              "allowedValues": [
                                "Standard_LRS",
                                "Standard_ZRS",
                                "Standard_GRS",
                                "Standard_GZRS",
                                "Standard_RAGRS",
                                "Standard_RAGZRS",
                                "Premium_LRS",
                                "Premium_ZRS"
                              ]
                            },
                            "containerName": {
                              "type": "string",
                              "defaultValue": "private",
                              "metadata": {
                                "description": "Name of the storage container resource to create for the pair"
                              }
                            },
                            "datastoreName": {
                              "type": "string",
                              "defaultValue": "[replace(format('datastore_{0}', parameters('storageName')), '-', '_')]",
                              "metadata": {
                                "description": "Name of the datastore for attaching the storage to the AzureML workspace."
                              }
                            },
                            "subnetIds": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Resource ID of the subnets allowed into this storage"
                              }
                            },
                            "publicNetworkAccess": {
                              "type": "string",
                              "defaultValue": "Disabled",
                              "metadata": {
                                "description": "Allow or disallow public network access to Storage Account."
                              },
                              "allowedValues": [
                                "Enabled",
                                "vNetOnly",
                                "Disabled"
                              ]
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
                            "storageAccountCleanName": "[substring(variables('storageNameCleaned'), 0, min(length(variables('storageNameCleaned')), 24))]",
                            "storageAllowedSubnetIds": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), createArray(), parameters('subnetIds'))]",
                            "storagedefaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]",
                            "storagepublicNetworkAccess": "[if(equals(parameters('publicNetworkAccess'), 'Disabled'), 'Disabled', 'Enabled')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Storage/storageAccounts",
                              "apiVersion": "2022-05-01",
                              "name": "[variables('storageAccountCleanName')]",
                              "location": "[parameters('storageRegion')]",
                              "tags": "[parameters('tags')]",
                              "sku": {
                                "name": "[parameters('storageSKU')]"
                              },
                              "kind": "StorageV2",
                              "properties": {
                                "accessTier": "Hot",
                                "allowBlobPublicAccess": false,
                                "allowCrossTenantReplication": false,
                                "allowedCopyScope": "PrivateLink",
                                "allowSharedKeyAccess": false,
                                "networkAcls": {
                                  "copy": [
                                    {
                                      "name": "virtualNetworkRules",
                                      "count": "[length(variables('storageAllowedSubnetIds'))]",
                                      "input": {
                                        "id": "[variables('storageAllowedSubnetIds')[copyIndex('virtualNetworkRules')]]",
                                        "action": "Allow"
                                      }
                                    }
                                  ],
                                  "bypass": "AzureServices",
                                  "defaultAction": "[variables('storagedefaultAction')]",
                                  "resourceAccessRules": []
                                },
                                "publicNetworkAccess": "[variables('storagepublicNetworkAccess')]",
                                "routingPreference": {
                                  "routingChoice": "MicrosoftRouting",
                                  "publishMicrosoftEndpoints": true
                                },
                                "encryption": {
                                  "keySource": "Microsoft.Storage",
                                  "requireInfrastructureEncryption": false,
                                  "services": {
                                    "blob": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    },
                                    "file": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    },
                                    "queue": {
                                      "enabled": true,
                                      "keyType": "Service"
                                    },
                                    "table": {
                                      "enabled": true,
                                      "keyType": "Service"
                                    }
                                  }
                                },
                                "isHnsEnabled": false,
                                "isNfsV3Enabled": false,
                                "isLocalUserEnabled": false,
                                "isSftpEnabled": false,
                                "keyPolicy": {
                                  "keyExpirationPeriodInDays": 7
                                },
                                "largeFileSharesState": "Disabled",
                                "minimumTlsVersion": "TLS1_2",
                                "supportsHttpsTrafficOnly": true
                              }
                            },
                            {
                              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                              "apiVersion": "2022-05-01",
                              "name": "[format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName'))]",
                              "properties": {
                                "metadata": {},
                                "publicAccess": "None"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.MachineLearningServices/workspaces/datastores",
                              "apiVersion": "2022-06-01-preview",
                              "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('datastoreName'))]",
                              "properties": {
                                "tags": "[parameters('tags')]",
                                "credentials": {
                                  "credentialsType": "None"
                                },
                                "description": "[format('Private storage in region {0}', parameters('storageRegion'))]",
                                "properties": {},
                                "datastoreType": "AzureBlob",
                                "accountName": "[variables('storageAccountCleanName')]",
                                "containerName": "[parameters('containerName')]",
                                "resourceGroup": "[resourceGroup().name]",
                                "subscriptionId": "[subscription().subscriptionId]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[2])]",
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "storageId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                            },
                            "storageName": {
                              "type": "string",
                              "value": "[variables('storageAccountCleanName')]"
                            },
                            "containerName": {
                              "type": "string",
                              "value": "[format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName'))]"
                            },
                            "datastoreName": {
                              "type": "string",
                              "value": "[format('{0}/{1}', parameters('machineLearningName'), parameters('datastoreName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('storagePublicNetworkAccess'), 'Disabled')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-endpoint-to-pair-storage', parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "resourceServiceId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageId.value]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}-to-{1}-st-blob', reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageName.value, parameters('pairBaseName'))]"
                          },
                          "subnetId": {
                            "value": "[format('{0}/subnets/endpoints', reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value)]"
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('storagePLEStaticIP')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('storagePLEStaticIP')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[parameters('blobPrivateDNSZoneName')]"
                          },
                          "groupId": {
                            "value": "blob"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName')))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('applyDefaultPermissions')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-internal-rw-perms', parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "storageAccountName": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageName.value]"
                          },
                          "identityPrincipalId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-aml-compute-01', parameters('pairBaseName'))), '2020-10-01').outputs.identityPrincipalId.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "7765934047439622108"
                            }
                          },
                          "parameters": {
                            "storageAccountName": {
                              "type": "string",
                              "metadata": {
                                "description": "Full path to storage"
                              }
                            },
                            "identityPrincipalId": {
                              "type": "string",
                              "metadata": {
                                "description": "PrincipalId of the managed identity"
                              }
                            },
                            "computeToStorageRoles": {
                              "type": "array",
                              "defaultValue": [
                                "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                                "81a9662b-bebf-436f-a333-f67b29880f12",
                                "c12c1c16-33a1-487b-954d-41c89c60f349"
                              ],
                              "metadata": {
                                "description": "Role definition IDs for the compute towards the internal storage"
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "roleAssignments",
                                "count": "[length(parameters('computeToStorageRoles'))]"
                              },
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
                              "name": "[guid(resourceGroup().id, resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('identityPrincipalId'), parameters('computeToStorageRoles')[copyIndex()])]",
                              "properties": {
                                "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, parameters('computeToStorageRoles')[copyIndex()])]",
                                "principalId": "[parameters('identityPrincipalId')]",
                                "principalType": "ServicePrincipal"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet-aml-compute-01', parameters('pairBaseName')))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-aml-compute-01', parameters('pairBaseName'))), '2020-10-01').outputs.identityPrincipalId.value]"
                    },
                    "storageName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageName.value]"
                    },
                    "storageServiceId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageId.value]"
                    },
                    "computeName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-aml-compute-01', parameters('pairBaseName'))), '2020-10-01').outputs.compute.value]"
                    },
                    "region": {
                      "type": "string",
                      "value": "[parameters('pairRegion')]"
                    },
                    "vnetName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.name.value]"
                    },
                    "vNetId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-ws-ple-in-orch', parameters('demoBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "machineLearningName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))), '2020-10-01').outputs.workspaceName.value]"
                  },
                  "pleRegion": {
                    "value": "[parameters('orchestratorRegion')]"
                  },
                  "virtualNetworkName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName'))), '2020-10-01').outputs.vnetName.value]"
                  },
                  "virtualNetworkId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName'))), '2020-10-01').outputs.vNetId.value]"
                  },
                  "subnetName": {
                    "value": "endpoints"
                  },
                  "linkAcrDnsToVirtualNetwork": {
                    "value": true
                  },
                  "createAcrPLE": {
                    "value": true
                  },
                  "acrPLEStaticIPs": {
                    "value": "10.0.0.237,10.0.0.236"
                  },
                  "linkKeyvaultDnsToVirtualNetwork": {
                    "value": true
                  },
                  "createKeyVaultPLE": {
                    "value": true
                  },
                  "keyVaultPLEStaticIP": {
                    "value": "10.0.0.238"
                  },
                  "linkBlobDnsToVirtualNetwork": {
                    "value": false
                  },
                  "createBlobPLE": {
                    "value": true
                  },
                  "blobPLEStaticIP": {
                    "value": "10.0.0.239"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "11810286320520273315"
                    }
                  },
                  "parameters": {
                    "machineLearningName": {
                      "type": "string",
                      "metadata": {
                        "description": "Machine learning workspace name"
                      }
                    },
                    "pleRegion": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the location of the Azure Machine Learning workspace and dependent resources."
                      }
                    },
                    "virtualNetworkName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of virtual network to add the PLEs"
                      }
                    },
                    "subnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "Subnet name in which to add the PLEs"
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "defaultValue": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/virtualNetworks/{2}', subscription().subscriptionId, resourceGroup().name, parameters('virtualNetworkName'))]",
                      "metadata": {
                        "description": "Virtual network ID for the workspace resources PLEs"
                      }
                    },
                    "linkKeyvaultDnsToVirtualNetwork": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Whether to link the private DNS zones to the virtual network"
                      }
                    },
                    "createKeyVaultPLE": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "keyVaultPLEStaticIP": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Static IP address for the KeyVault PLE"
                      }
                    },
                    "linkAcrDnsToVirtualNetwork": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Whether to link the private DNS zones to the virtual network"
                      }
                    },
                    "createAcrPLE": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "acrPLEStaticIPs": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Static IP address for the ACR PLE (needs 1 for registy, one for data)"
                      }
                    },
                    "linkBlobDnsToVirtualNetwork": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Whether to link the private DNS zones to the virtual network"
                      }
                    },
                    "createBlobPLE": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "blobPLEStaticIP": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Static IP address for the workspace blob PLE"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to curate the resources in Azure."
                      }
                    }
                  },
                  "variables": {
                    "subnetId": "[format('{0}/subnets/{1}', parameters('virtualNetworkId'), parameters('subnetName'))]",
                    "keyVaultPrivateDnsZoneName": "[format('privatelink{0}', environment().suffixes.keyvaultDns)]",
                    "acrPrivateDnsZoneName": "[format('privatelink{0}', environment().suffixes.acrLoginServer)]",
                    "blobPrivateDnsZoneName": "[format('privatelink.blob.{0}', environment().suffixes.storage)]"
                  },
                  "resources": [
                    {
                      "condition": "[parameters('linkKeyvaultDnsToVirtualNetwork')]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('keyVaultPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('keyVaultPrivateDnsZoneName'), parameters('pleRegion')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      }
                    },
                    {
                      "condition": "[parameters('linkAcrDnsToVirtualNetwork')]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('acrPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('acrPrivateDnsZoneName'), parameters('pleRegion')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      }
                    },
                    {
                      "condition": "[parameters('linkBlobDnsToVirtualNetwork')]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('blobPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('blobPrivateDnsZoneName'), parameters('pleRegion')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      }
                    },
                    {
                      "condition": "[parameters('createKeyVaultPLE')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('ple-{0}-kv-in-vnet-{1}-deploy', parameters('machineLearningName'), parameters('virtualNetworkName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "location": {
                            "value": "[parameters('pleRegion')]"
                          },
                          "resourceServiceId": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName')), '2022-12-01-preview').keyVault]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}-kv-in-vnet-{1}', parameters('machineLearningName'), parameters('virtualNetworkName'))]"
                          },
                          "subnetId": {
                            "value": "[variables('subnetId')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[variables('keyVaultPrivateDnsZoneName')]"
                          },
                          "groupId": {
                            "value": "vault"
                          },
                          "memberNames": {
                            "value": [
                              "default"
                            ]
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('keyVaultPLEStaticIP')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('keyVaultPLEStaticIP')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('keyVaultPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('keyVaultPrivateDnsZoneName'), parameters('pleRegion')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('createAcrPLE')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('ple-{0}-cr-in-vnet-{1}-deploy', parameters('machineLearningName'), parameters('virtualNetworkName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "location": {
                            "value": "[parameters('pleRegion')]"
                          },
                          "resourceServiceId": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName')), '2022-12-01-preview').containerRegistry]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}-cr-in-vnet-{1}', parameters('machineLearningName'), parameters('virtualNetworkName'))]"
                          },
                          "subnetId": {
                            "value": "[variables('subnetId')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[variables('acrPrivateDnsZoneName')]"
                          },
                          "groupId": {
                            "value": "registry"
                          },
                          "memberNames": {
                            "value": [
                              "registry",
                              "[format('registry_data_{0}', reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName')), '2022-12-01-preview', 'full').location)]"
                            ]
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('acrPLEStaticIPs')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('acrPLEStaticIPs')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('acrPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('acrPrivateDnsZoneName'), parameters('pleRegion')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('createBlobPLE')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('ple-{0}-blob-in-vnet-{1}-ple', parameters('machineLearningName'), parameters('virtualNetworkName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "location": {
                            "value": "[parameters('pleRegion')]"
                          },
                          "resourceServiceId": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName')), '2022-12-01-preview').storageAccount]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}-blob-in-vnet-{1}-ple', parameters('machineLearningName'), parameters('virtualNetworkName'))]"
                          },
                          "subnetId": {
                            "value": "[variables('subnetId')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[variables('blobPrivateDnsZoneName')]"
                          },
                          "groupId": {
                            "value": "blob"
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('blobPLEStaticIP')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('blobPLEStaticIP')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('blobPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('blobPrivateDnsZoneName'), parameters('pleRegion')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName')))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-rw-perms-ws-to-orch', parameters('demoBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))), '2020-10-01').outputs.workspaceStorageName.value]"
                  },
                  "identityPrincipalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName'))), '2020-10-01').outputs.identityPrincipalId.value]"
                  },
                  "computeToStorageRoles": {
                    "value": [
                      "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
                      "81a9662b-bebf-436f-a333-f67b29880f12",
                      "c12c1c16-33a1-487b-954d-41c89c60f349"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "7765934047439622108"
                    }
                  },
                  "parameters": {
                    "storageAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Full path to storage"
                      }
                    },
                    "identityPrincipalId": {
                      "type": "string",
                      "metadata": {
                        "description": "PrincipalId of the managed identity"
                      }
                    },
                    "computeToStorageRoles": {
                      "type": "array",
                      "defaultValue": [
                        "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                        "81a9662b-bebf-436f-a333-f67b29880f12",
                        "c12c1c16-33a1-487b-954d-41c89c60f349"
                      ],
                      "metadata": {
                        "description": "Role definition IDs for the compute towards the internal storage"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignments",
                        "count": "[length(parameters('computeToStorageRoles'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
                      "name": "[guid(resourceGroup().id, resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('identityPrincipalId'), parameters('computeToStorageRoles')[copyIndex()])]",
                      "properties": {
                        "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, parameters('computeToStorageRoles')[copyIndex()])]",
                        "principalId": "[parameters('identityPrincipalId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName')))]",
                "silos",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion')))]"
              ]
            },
            {
              "copy": {
                "name": "silos",
                "count": "[length(range(0, variables('siloCount')))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "machineLearningName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))), '2020-10-01').outputs.workspaceName.value]"
                  },
                  "machineLearningRegion": {
                    "value": "[parameters('orchestratorRegion')]"
                  },
                  "machineLearningIsPrivate": {
                    "value": true
                  },
                  "createMachineLearningPLE": {
                    "value": "[not(parameters('applyVNetPeering'))]"
                  },
                  "pairRegion": {
                    "value": "[parameters('siloRegions')[range(0, variables('siloCount'))[copyIndex()]]]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "pairBaseName": {
                    "value": "[format('{0}-silo{1}', parameters('demoBaseName'), range(0, variables('siloCount'))[copyIndex()])]"
                  },
                  "compute1Name": {
                    "value": "[format('silo{0}-01', range(0, variables('siloCount'))[copyIndex()])]"
                  },
                  "compute1SKU": {
                    "value": "[parameters('compute1SKU')]"
                  },
                  "computeNodes": {
                    "value": 2
                  },
                  "compute2": {
                    "value": "[parameters('compute2')]"
                  },
                  "compute2SKU": {
                    "value": "[parameters('compute2SKU')]"
                  },
                  "compute2Name": {
                    "value": "[format('silo{0}-02', range(0, variables('siloCount'))[copyIndex()])]"
                  },
                  "datastoreName": {
                    "value": "[format('datastore_silo{0}', range(0, variables('siloCount'))[copyIndex()])]"
                  },
                  "applyDefaultPermissions": {
                    "value": true
                  },
                  "vnetAddressPrefix": "[if(parameters('applyVNetPeering'), createObject('value', format('10.{0}.0.0/16', add(range(0, variables('siloCount'))[copyIndex()], 2))), createObject('value', '10.0.0.0/16'))]",
                  "computeSubnetPrefix": "[if(parameters('applyVNetPeering'), createObject('value', format('10.{0}.1.0/24', add(range(0, variables('siloCount'))[copyIndex()], 2))), createObject('value', '10.0.1.0/24'))]",
                  "endpointsSubnetPrefix": "[if(parameters('applyVNetPeering'), createObject('value', format('10.{0}.0.0/24', add(range(0, variables('siloCount'))[copyIndex()], 2))), createObject('value', '10.0.0.0/24'))]",
                  "amlPLEStaticIPs": "[if(parameters('applyVNetPeering'), createObject('value', format('10.{0}.0.240,10.{1}.0.241,10.{2}.0.242', add(range(0, variables('siloCount'))[copyIndex()], 2), add(range(0, variables('siloCount'))[copyIndex()], 2), add(range(0, variables('siloCount'))[copyIndex()], 2))), createObject('value', '10.0.0.240,10.0.0.241,10.0.0.242'))]",
                  "storagePLEStaticIP": "[if(parameters('applyVNetPeering'), createObject('value', format('10.{0}.0.244', add(range(0, variables('siloCount'))[copyIndex()], 2))), createObject('value', '10.0.0.244'))]",
                  "enableNodePublicIp": {
                    "value": false
                  },
                  "storagePublicNetworkAccess": "[if(equals(parameters('siloStorageNetworkAccess'), 'public'), createObject('value', 'Enabled'), createObject('value', 'Disabled'))]",
                  "blobPrivateDNSZoneName": {
                    "value": "[format('privatelink.blob.{0}', environment().suffixes.storage)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "14090691852766171529"
                    }
                  },
                  "parameters": {
                    "machineLearningName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of AzureML workspace to attach compute+storage to."
                      }
                    },
                    "machineLearningRegion": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The region of the machine learning workspace"
                      }
                    },
                    "machineLearningIsPrivate": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set true to provision PLEs necessary for private workspace to interact with the pair"
                      }
                    },
                    "pairRegion": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Specifies the location of the pair resources."
                      }
                    },
                    "pairBaseName": {
                      "type": "string",
                      "metadata": {
                        "description": "Base name used for creating all pair resources."
                      }
                    },
                    "storageAccountName": {
                      "type": "string",
                      "defaultValue": "[replace(format('st{0}', parameters('pairBaseName')), '-', '')]",
                      "metadata": {
                        "description": "Name of the storage account resource to create for the pair"
                      }
                    },
                    "datastoreName": {
                      "type": "string",
                      "defaultValue": "[replace(format('datastore_{0}', parameters('pairBaseName')), '-', '_')]",
                      "metadata": {
                        "description": "Name of the datastore for attaching the storage to the AzureML workspace."
                      }
                    },
                    "compute1Name": {
                      "type": "string",
                      "defaultValue": "[format('{0}-01', parameters('pairBaseName'))]",
                      "metadata": {
                        "description": "Name of the default compute cluster for the pair"
                      }
                    },
                    "compute1SKU": {
                      "type": "string",
                      "defaultValue": "Standard_DS3_v2",
                      "metadata": {
                        "description": "VM size for the compute cluster"
                      }
                    },
                    "computeNodes": {
                      "type": "int",
                      "defaultValue": 4,
                      "metadata": {
                        "description": "VM nodes for the default compute cluster"
                      }
                    },
                    "compute2": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Flag whether to create a second compute or not"
                      }
                    },
                    "compute2SKU": {
                      "type": "string",
                      "defaultValue": "Standard_DS3_v2",
                      "metadata": {
                        "description": "The second VM used for creating compute clusters in orchestrator and silos."
                      }
                    },
                    "compute2Name": {
                      "type": "string",
                      "defaultValue": "[format('{0}-02', parameters('pairBaseName'))]",
                      "metadata": {
                        "description": "Name of the second compute cluster for the pair"
                      }
                    },
                    "jobsUaiName": {
                      "type": "string",
                      "defaultValue": "[format('uai-jobs-{0}', parameters('pairBaseName'))]",
                      "metadata": {
                        "description": "Name of the UAI for the jobs running in the pair"
                      }
                    },
                    "nsgResourceName": {
                      "type": "string",
                      "defaultValue": "[format('nsg-{0}', parameters('pairBaseName'))]",
                      "metadata": {
                        "description": "Name of the Network Security Group resource"
                      }
                    },
                    "vnetResourceName": {
                      "type": "string",
                      "defaultValue": "[format('vnet-{0}', parameters('pairBaseName'))]",
                      "metadata": {
                        "description": "Name of the vNET resource"
                      }
                    },
                    "vnetAddressPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.0.0/16",
                      "metadata": {
                        "description": "Virtual network address prefix"
                      }
                    },
                    "computeSubnetPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.1.0/24",
                      "metadata": {
                        "description": "Subnet address prefix"
                      }
                    },
                    "endpointsSubnetPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.0.0/24",
                      "metadata": {
                        "description": "Subnet address prefix"
                      }
                    },
                    "storagePLEStaticIP": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional: static ip for the pair blob storage PLE"
                      }
                    },
                    "createMachineLearningPLE": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Create a PLE for the machine learning workspace (if machineLearningIsPrivate=true)"
                      }
                    },
                    "amlPLEStaticIPs": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional: static ip for the PLE to the workspace (if machineLearningIsPrivate=true)"
                      }
                    },
                    "allowedSubnetIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Allow other subnets into the storage (need to be in the same region)"
                      }
                    },
                    "enableNodePublicIp": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Enable compute node public IP"
                      }
                    },
                    "storagePublicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "metadata": {
                        "description": "Allow or disallow public network access to Storage Account."
                      },
                      "allowedValues": [
                        "Enabled",
                        "vNetOnly",
                        "Disabled"
                      ]
                    },
                    "applyDefaultPermissions": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Allow compute cluster to access storage account with R/W permissions (using UAI)"
                      }
                    },
                    "blobPrivateDNSZoneName": {
                      "type": "string",
                      "defaultValue": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
                      "metadata": {
                        "description": "Name of the private DNS zone for blob"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to curate the resources in Azure."
                      }
                    }
                  },
                  "variables": {
                    "amlPrivateDnsZoneNames": {
                      "azureusgovernment": "privatelink.api.ml.azure.us",
                      "azurechinacloud": "privatelink.api.ml.azure.cn",
                      "azurecloud": "privatelink.api.azureml.ms"
                    },
                    "amlPrivateDnsZoneName": "[variables('amlPrivateDnsZoneNames')[toLower(environment().name)]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2022-01-31-preview",
                      "name": "[parameters('jobsUaiName')]",
                      "location": "[parameters('pairRegion')]",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "condition": "[and(parameters('machineLearningIsPrivate'), parameters('createMachineLearningPLE'))]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('amlPrivateDnsZoneName'), uniqueString(subscription().id, resourceGroup().id, parameters('vnetResourceName'), variables('amlPrivateDnsZoneName'), 'global'))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('blobPrivateDNSZoneName'), uniqueString(format('{0}-deployment', parameters('vnetResourceName')), parameters('blobPrivateDNSZoneName'), 'global'))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-deployment', parameters('nsgResourceName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "nsgName": {
                            "value": "[parameters('nsgResourceName')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "workspaceRegion": {
                            "value": "[parameters('machineLearningRegion')]"
                          },
                          "enableNodePublicIp": {
                            "value": "[parameters('enableNodePublicIp')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9356966489364776969"
                            }
                          },
                          "parameters": {
                            "nsgName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the network security group"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "workspaceRegion": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Region of the AzureML workspace"
                              }
                            },
                            "enableNodePublicIp": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set rules to allow for compute with public IP"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkSecurityGroups",
                              "apiVersion": "2022-07-01",
                              "name": "[parameters('nsgName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]"
                            },
                            {
                              "condition": "[parameters('enableNodePublicIp')]",
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureMLPublicIPInbound')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "44224",
                                "sourceAddressPrefix": "AzureMachineLearning",
                                "destinationAddressPrefix": "*",
                                "access": "Allow",
                                "priority": 130,
                                "direction": "Inbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureMLOutboundTcp')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRanges": [
                                  "443",
                                  "8787",
                                  "18881"
                                ],
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "AzureMachineLearning",
                                "access": "Allow",
                                "priority": 140,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureMLOutboundUdp')]",
                              "properties": {
                                "protocol": "Udp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "5831",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "AzureMachineLearning",
                                "access": "Allow",
                                "priority": 150,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'BatchNodeManagementOutbound')]",
                              "properties": {
                                "protocol": "*",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "[format('BatchNodeManagement.{0}', parameters('workspaceRegion'))]",
                                "access": "Allow",
                                "priority": 160,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'OrchestratorStorageAccount')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "[format('Storage.{0}', parameters('workspaceRegion'))]",
                                "access": "Allow",
                                "priority": 170,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'SiloStorageAccount')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "[format('Storage.{0}', parameters('location'))]",
                                "access": "Allow",
                                "priority": 171,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureActiveDirectory')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "*",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "AzureActiveDirectory",
                                "access": "Allow",
                                "priority": 180,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureFrontDoor')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "AzureFrontDoor.FrontEnd",
                                "access": "Allow",
                                "priority": 190,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureContainerRegistryOrch')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "[format('AzureContainerRegistry.{0}', parameters('workspaceRegion'))]",
                                "access": "Allow",
                                "priority": 200,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'AzureContainerRegistrySilo')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "[format('AzureContainerRegistry.{0}', parameters('location'))]",
                                "access": "Allow",
                                "priority": 201,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                              "apiVersion": "2022-07-01",
                              "name": "[format('{0}/{1}', parameters('nsgName'), 'MicrosoftContainerRegistry')]",
                              "properties": {
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "destinationPortRange": "443",
                                "sourceAddressPrefix": "VirtualNetwork",
                                "destinationAddressPrefix": "MicrosoftContainerRegistry",
                                "access": "Allow",
                                "priority": 210,
                                "direction": "Outbound"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-deployment', parameters('vnetResourceName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "virtualNetworkName": {
                            "value": "[parameters('vnetResourceName')]"
                          },
                          "networkSecurityGroupId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('nsgResourceName'))), '2020-10-01').outputs.id.value]"
                          },
                          "vnetAddressPrefix": {
                            "value": "[parameters('vnetAddressPrefix')]"
                          },
                          "subnets": {
                            "value": [
                              {
                                "name": "compute",
                                "addressPrefix": "[parameters('computeSubnetPrefix')]"
                              },
                              {
                                "name": "endpoints",
                                "addressPrefix": "[parameters('endpointsSubnetPrefix')]"
                              }
                            ]
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "12102256299858550532"
                            }
                          },
                          "parameters": {
                            "virtualNetworkName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the virtual network resource"
                              }
                            },
                            "networkSecurityGroupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Group ID of the network security group"
                              }
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "vnetAddressPrefix": {
                              "type": "string",
                              "defaultValue": "10.0.0.0/16",
                              "metadata": {
                                "description": "Virtual network address prefix"
                              }
                            },
                            "subnets": {
                              "type": "array",
                              "defaultValue": [
                                {
                                  "name": "snet-training",
                                  "addressPrefix": "10.0.0.0/24"
                                }
                              ],
                              "metadata": {
                                "description": "Training subnets names and address prefix"
                              }
                            },
                            "serviceEndpoints": {
                              "type": "array",
                              "defaultValue": [
                                "Microsoft.KeyVault",
                                "Microsoft.ContainerRegistry",
                                "Microsoft.Storage"
                              ],
                              "metadata": {
                                "description": "List of service endpoints expected on this vnet"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "serviceEndpointsDefinition",
                                "count": "[length(parameters('serviceEndpoints'))]",
                                "input": {
                                  "service": "[parameters('serviceEndpoints')[copyIndex('serviceEndpointsDefinition')]]"
                                }
                              },
                              {
                                "name": "subnetsDefinition",
                                "count": "[length(parameters('subnets'))]",
                                "input": {
                                  "name": "[parameters('subnets')[copyIndex('subnetsDefinition')].name]",
                                  "properties": {
                                    "addressPrefix": "[parameters('subnets')[copyIndex('subnetsDefinition')].addressPrefix]",
                                    "privateEndpointNetworkPolicies": "Disabled",
                                    "privateLinkServiceNetworkPolicies": "Disabled",
                                    "serviceEndpoints": "[variables('serviceEndpointsDefinition')]",
                                    "networkSecurityGroup": {
                                      "id": "[parameters('networkSecurityGroupId')]"
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('virtualNetworkName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "addressSpace": {
                                  "addressPrefixes": [
                                    "[parameters('vnetAddressPrefix')]"
                                  ]
                                },
                                "subnets": "[variables('subnetsDefinition')]"
                              }
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('virtualNetworkName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('nsgResourceName')))]"
                      ]
                    },
                    {
                      "condition": "[and(parameters('machineLearningIsPrivate'), parameters('createMachineLearningPLE'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-{1}-ple-deployment', parameters('machineLearningName'), parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}-{1}', parameters('machineLearningName'), parameters('pairBaseName'))]"
                          },
                          "resourceServiceId": {
                            "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName'))]"
                          },
                          "subnetId": {
                            "value": "[format('{0}/subnets/endpoints', reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value)]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('amlPLEStaticIPs')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('amlPLEStaticIPs')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[variables('amlPrivateDnsZoneName')]"
                          },
                          "groupId": {
                            "value": "amlworkspace"
                          },
                          "memberNames": {
                            "value": [
                              "default",
                              "notebook",
                              "inference"
                            ]
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('amlPrivateDnsZoneName'), uniqueString(subscription().id, resourceGroup().id, parameters('vnetResourceName'), variables('amlPrivateDnsZoneName'), 'global'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-vnet-aml-compute-01', parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "machineLearningName": {
                            "value": "[parameters('machineLearningName')]"
                          },
                          "machineLearningRegion": {
                            "value": "[parameters('machineLearningRegion')]"
                          },
                          "computeName": {
                            "value": "[parameters('compute1Name')]"
                          },
                          "computeRegion": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "computeSKU": {
                            "value": "[parameters('compute1SKU')]"
                          },
                          "computeNodes": {
                            "value": "[parameters('computeNodes')]"
                          },
                          "computeIdentityType": {
                            "value": "UserAssigned"
                          },
                          "computeUaiName": {
                            "value": "[parameters('jobsUaiName')]"
                          },
                          "subnetName": {
                            "value": "compute"
                          },
                          "vnetId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value]"
                          },
                          "enableNodePublicIp": {
                            "value": "[parameters('enableNodePublicIp')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "5294871759130614635"
                            }
                          },
                          "parameters": {
                            "machineLearningName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of AzureML workspace to attach compute+storage to."
                              }
                            },
                            "machineLearningRegion": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "The region of the machine learning workspace"
                              }
                            },
                            "computeName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the compute cluster to create"
                              }
                            },
                            "computeRegion": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the location of the compute resources."
                              }
                            },
                            "computeSKU": {
                              "type": "string",
                              "defaultValue": "Standard_DS3_v2",
                              "metadata": {
                                "description": "VM size for the default compute cluster"
                              }
                            },
                            "computeNodes": {
                              "type": "int",
                              "defaultValue": 4,
                              "metadata": {
                                "description": "VM nodes for the default compute cluster"
                              }
                            },
                            "computeIdentityType": {
                              "type": "string",
                              "defaultValue": "UserAssigned",
                              "allowedValues": [
                                "UserAssigned",
                                "SystemAssigned"
                              ]
                            },
                            "computeUaiName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the UAI for the compute cluster (if computeIdentityType==UserAssigned)"
                              }
                            },
                            "vnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "virtual network ID"
                              }
                            },
                            "subnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "Subnet name"
                              }
                            },
                            "enableNodePublicIp": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Enable compute node public IP"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to curate the resources in Azure."
                              }
                            }
                          },
                          "variables": {
                            "userAssignedIdentities": "[if(equals(parameters('computeIdentityType'), 'SystemAssigned'), null(), createObject(format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{2}', subscription().subscriptionId, resourceGroup().name, parameters('computeUaiName')), createObject()))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.MachineLearningServices/workspaces/computes",
                              "apiVersion": "2021-07-01",
                              "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('computeName'))]",
                              "location": "[parameters('machineLearningRegion')]",
                              "tags": "[parameters('tags')]",
                              "identity": {
                                "type": "[parameters('computeIdentityType')]",
                                "userAssignedIdentities": "[variables('userAssignedIdentities')]"
                              },
                              "properties": {
                                "computeType": "AmlCompute",
                                "computeLocation": "[parameters('computeRegion')]",
                                "disableLocalAuth": true,
                                "properties": {
                                  "vmPriority": "Dedicated",
                                  "vmSize": "[parameters('computeSKU')]",
                                  "osType": "Linux",
                                  "scaleSettings": {
                                    "maxNodeCount": "[parameters('computeNodes')]",
                                    "minNodeCount": 0,
                                    "nodeIdleTimeBeforeScaleDown": "PT300S"
                                  },
                                  "enableNodePublicIp": "[parameters('enableNodePublicIp')]",
                                  "isolatedNetwork": false,
                                  "remoteLoginPortPublicAccess": "Disabled",
                                  "subnet": {
                                    "id": "[format('{0}/subnets/{1}', parameters('vnetId'), parameters('subnetName'))]"
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(equals(parameters('computeIdentityType'), 'UserAssigned'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('computeUaiName')), '2022-01-31-preview').principalId, reference(resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('machineLearningName'), parameters('computeName')), '2021-07-01', 'full').identity.principalId)]"
                            },
                            "compute": {
                              "type": "string",
                              "value": "[parameters('computeName')]"
                            },
                            "region": {
                              "type": "string",
                              "value": "[parameters('computeRegion')]"
                            },
                            "subnetName": {
                              "type": "string",
                              "value": "[parameters('subnetName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('jobsUaiName'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('compute2')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-vnet-aml-compute-02', parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "machineLearningName": {
                            "value": "[parameters('machineLearningName')]"
                          },
                          "machineLearningRegion": {
                            "value": "[parameters('machineLearningRegion')]"
                          },
                          "computeName": {
                            "value": "[parameters('compute2Name')]"
                          },
                          "computeRegion": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "computeSKU": {
                            "value": "[parameters('compute2SKU')]"
                          },
                          "computeNodes": {
                            "value": "[parameters('computeNodes')]"
                          },
                          "computeIdentityType": {
                            "value": "UserAssigned"
                          },
                          "computeUaiName": {
                            "value": "[parameters('jobsUaiName')]"
                          },
                          "subnetName": {
                            "value": "compute"
                          },
                          "vnetId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value]"
                          },
                          "enableNodePublicIp": {
                            "value": "[parameters('enableNodePublicIp')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "5294871759130614635"
                            }
                          },
                          "parameters": {
                            "machineLearningName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of AzureML workspace to attach compute+storage to."
                              }
                            },
                            "machineLearningRegion": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "The region of the machine learning workspace"
                              }
                            },
                            "computeName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the compute cluster to create"
                              }
                            },
                            "computeRegion": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the location of the compute resources."
                              }
                            },
                            "computeSKU": {
                              "type": "string",
                              "defaultValue": "Standard_DS3_v2",
                              "metadata": {
                                "description": "VM size for the default compute cluster"
                              }
                            },
                            "computeNodes": {
                              "type": "int",
                              "defaultValue": 4,
                              "metadata": {
                                "description": "VM nodes for the default compute cluster"
                              }
                            },
                            "computeIdentityType": {
                              "type": "string",
                              "defaultValue": "UserAssigned",
                              "allowedValues": [
                                "UserAssigned",
                                "SystemAssigned"
                              ]
                            },
                            "computeUaiName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the UAI for the compute cluster (if computeIdentityType==UserAssigned)"
                              }
                            },
                            "vnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "virtual network ID"
                              }
                            },
                            "subnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "Subnet name"
                              }
                            },
                            "enableNodePublicIp": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Enable compute node public IP"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to curate the resources in Azure."
                              }
                            }
                          },
                          "variables": {
                            "userAssignedIdentities": "[if(equals(parameters('computeIdentityType'), 'SystemAssigned'), null(), createObject(format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{2}', subscription().subscriptionId, resourceGroup().name, parameters('computeUaiName')), createObject()))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.MachineLearningServices/workspaces/computes",
                              "apiVersion": "2021-07-01",
                              "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('computeName'))]",
                              "location": "[parameters('machineLearningRegion')]",
                              "tags": "[parameters('tags')]",
                              "identity": {
                                "type": "[parameters('computeIdentityType')]",
                                "userAssignedIdentities": "[variables('userAssignedIdentities')]"
                              },
                              "properties": {
                                "computeType": "AmlCompute",
                                "computeLocation": "[parameters('computeRegion')]",
                                "disableLocalAuth": true,
                                "properties": {
                                  "vmPriority": "Dedicated",
                                  "vmSize": "[parameters('computeSKU')]",
                                  "osType": "Linux",
                                  "scaleSettings": {
                                    "maxNodeCount": "[parameters('computeNodes')]",
                                    "minNodeCount": 0,
                                    "nodeIdleTimeBeforeScaleDown": "PT300S"
                                  },
                                  "enableNodePublicIp": "[parameters('enableNodePublicIp')]",
                                  "isolatedNetwork": false,
                                  "remoteLoginPortPublicAccess": "Disabled",
                                  "subnet": {
                                    "id": "[format('{0}/subnets/{1}', parameters('vnetId'), parameters('subnetName'))]"
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(equals(parameters('computeIdentityType'), 'UserAssigned'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('computeUaiName')), '2022-01-31-preview').principalId, reference(resourceId('Microsoft.MachineLearningServices/workspaces/computes', parameters('machineLearningName'), parameters('computeName')), '2021-07-01', 'full').identity.principalId)]"
                            },
                            "compute": {
                              "type": "string",
                              "value": "[parameters('computeName')]"
                            },
                            "region": {
                              "type": "string",
                              "value": "[parameters('computeRegion')]"
                            },
                            "subnetName": {
                              "type": "string",
                              "value": "[parameters('subnetName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('jobsUaiName'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-vnet-storage', parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "machineLearningName": {
                            "value": "[parameters('machineLearningName')]"
                          },
                          "machineLearningRegion": {
                            "value": "[parameters('machineLearningRegion')]"
                          },
                          "storageName": {
                            "value": "[parameters('storageAccountName')]"
                          },
                          "storageRegion": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "datastoreName": {
                            "value": "[parameters('datastoreName')]"
                          },
                          "publicNetworkAccess": {
                            "value": "[parameters('storagePublicNetworkAccess')]"
                          },
                          "subnetIds": {
                            "value": "[concat(createArray(format('{0}/subnets/endpoints', reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value)), parameters('allowedSubnetIds'))]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "3521838058917601730"
                            }
                          },
                          "parameters": {
                            "machineLearningName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of AzureML workspace to attach compute+storage to."
                              }
                            },
                            "machineLearningRegion": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "The region of the machine learning workspace"
                              }
                            },
                            "storageName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage account"
                              }
                            },
                            "storageRegion": {
                              "type": "string",
                              "metadata": {
                                "description": "Azure region of the storage to create"
                              }
                            },
                            "storageSKU": {
                              "type": "string",
                              "defaultValue": "Standard_LRS",
                              "metadata": {
                                "description": "Storage SKU"
                              },
                              "allowedValues": [
                                "Standard_LRS",
                                "Standard_ZRS",
                                "Standard_GRS",
                                "Standard_GZRS",
                                "Standard_RAGRS",
                                "Standard_RAGZRS",
                                "Premium_LRS",
                                "Premium_ZRS"
                              ]
                            },
                            "containerName": {
                              "type": "string",
                              "defaultValue": "private",
                              "metadata": {
                                "description": "Name of the storage container resource to create for the pair"
                              }
                            },
                            "datastoreName": {
                              "type": "string",
                              "defaultValue": "[replace(format('datastore_{0}', parameters('storageName')), '-', '_')]",
                              "metadata": {
                                "description": "Name of the datastore for attaching the storage to the AzureML workspace."
                              }
                            },
                            "subnetIds": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Resource ID of the subnets allowed into this storage"
                              }
                            },
                            "publicNetworkAccess": {
                              "type": "string",
                              "defaultValue": "Disabled",
                              "metadata": {
                                "description": "Allow or disallow public network access to Storage Account."
                              },
                              "allowedValues": [
                                "Enabled",
                                "vNetOnly",
                                "Disabled"
                              ]
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
                            "storageAccountCleanName": "[substring(variables('storageNameCleaned'), 0, min(length(variables('storageNameCleaned')), 24))]",
                            "storageAllowedSubnetIds": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), createArray(), parameters('subnetIds'))]",
                            "storagedefaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]",
                            "storagepublicNetworkAccess": "[if(equals(parameters('publicNetworkAccess'), 'Disabled'), 'Disabled', 'Enabled')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Storage/storageAccounts",
                              "apiVersion": "2022-05-01",
                              "name": "[variables('storageAccountCleanName')]",
                              "location": "[parameters('storageRegion')]",
                              "tags": "[parameters('tags')]",
                              "sku": {
                                "name": "[parameters('storageSKU')]"
                              },
                              "kind": "StorageV2",
                              "properties": {
                                "accessTier": "Hot",
                                "allowBlobPublicAccess": false,
                                "allowCrossTenantReplication": false,
                                "allowedCopyScope": "PrivateLink",
                                "allowSharedKeyAccess": false,
                                "networkAcls": {
                                  "copy": [
                                    {
                                      "name": "virtualNetworkRules",
                                      "count": "[length(variables('storageAllowedSubnetIds'))]",
                                      "input": {
                                        "id": "[variables('storageAllowedSubnetIds')[copyIndex('virtualNetworkRules')]]",
                                        "action": "Allow"
                                      }
                                    }
                                  ],
                                  "bypass": "AzureServices",
                                  "defaultAction": "[variables('storagedefaultAction')]",
                                  "resourceAccessRules": []
                                },
                                "publicNetworkAccess": "[variables('storagepublicNetworkAccess')]",
                                "routingPreference": {
                                  "routingChoice": "MicrosoftRouting",
                                  "publishMicrosoftEndpoints": true
                                },
                                "encryption": {
                                  "keySource": "Microsoft.Storage",
                                  "requireInfrastructureEncryption": false,
                                  "services": {
                                    "blob": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    },
                                    "file": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    },
                                    "queue": {
                                      "enabled": true,
                                      "keyType": "Service"
                                    },
                                    "table": {
                                      "enabled": true,
                                      "keyType": "Service"
                                    }
                                  }
                                },
                                "isHnsEnabled": false,
                                "isNfsV3Enabled": false,
                                "isLocalUserEnabled": false,
                                "isSftpEnabled": false,
                                "keyPolicy": {
                                  "keyExpirationPeriodInDays": 7
                                },
                                "largeFileSharesState": "Disabled",
                                "minimumTlsVersion": "TLS1_2",
                                "supportsHttpsTrafficOnly": true
                              }
                            },
                            {
                              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                              "apiVersion": "2022-05-01",
                              "name": "[format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName'))]",
                              "properties": {
                                "metadata": {},
                                "publicAccess": "None"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.MachineLearningServices/workspaces/datastores",
                              "apiVersion": "2022-06-01-preview",
                              "name": "[format('{0}/{1}', parameters('machineLearningName'), parameters('datastoreName'))]",
                              "properties": {
                                "tags": "[parameters('tags')]",
                                "credentials": {
                                  "credentialsType": "None"
                                },
                                "description": "[format('Private storage in region {0}', parameters('storageRegion'))]",
                                "properties": {},
                                "datastoreType": "AzureBlob",
                                "accountName": "[variables('storageAccountCleanName')]",
                                "containerName": "[parameters('containerName')]",
                                "resourceGroup": "[resourceGroup().name]",
                                "subscriptionId": "[subscription().subscriptionId]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName')), '/')[2])]",
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "storageId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountCleanName'))]"
                            },
                            "storageName": {
                              "type": "string",
                              "value": "[variables('storageAccountCleanName')]"
                            },
                            "containerName": {
                              "type": "string",
                              "value": "[format('{0}/default/{1}', variables('storageAccountCleanName'), parameters('containerName'))]"
                            },
                            "datastoreName": {
                              "type": "string",
                              "value": "[format('{0}/{1}', parameters('machineLearningName'), parameters('datastoreName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('storagePublicNetworkAccess'), 'Disabled')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-endpoint-to-pair-storage', parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('pairRegion')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "resourceServiceId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageId.value]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}-to-{1}-st-blob', reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageName.value, parameters('pairBaseName'))]"
                          },
                          "subnetId": {
                            "value": "[format('{0}/subnets/endpoints', reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value)]"
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('storagePLEStaticIP')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('storagePLEStaticIP')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[parameters('blobPrivateDNSZoneName')]"
                          },
                          "groupId": {
                            "value": "blob"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName')))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('applyDefaultPermissions')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-internal-rw-perms', parameters('pairBaseName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "storageAccountName": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageName.value]"
                          },
                          "identityPrincipalId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-aml-compute-01', parameters('pairBaseName'))), '2020-10-01').outputs.identityPrincipalId.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "7765934047439622108"
                            }
                          },
                          "parameters": {
                            "storageAccountName": {
                              "type": "string",
                              "metadata": {
                                "description": "Full path to storage"
                              }
                            },
                            "identityPrincipalId": {
                              "type": "string",
                              "metadata": {
                                "description": "PrincipalId of the managed identity"
                              }
                            },
                            "computeToStorageRoles": {
                              "type": "array",
                              "defaultValue": [
                                "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                                "81a9662b-bebf-436f-a333-f67b29880f12",
                                "c12c1c16-33a1-487b-954d-41c89c60f349"
                              ],
                              "metadata": {
                                "description": "Role definition IDs for the compute towards the internal storage"
                              }
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "roleAssignments",
                                "count": "[length(parameters('computeToStorageRoles'))]"
                              },
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
                              "name": "[guid(resourceGroup().id, resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('identityPrincipalId'), parameters('computeToStorageRoles')[copyIndex()])]",
                              "properties": {
                                "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, parameters('computeToStorageRoles')[copyIndex()])]",
                                "principalId": "[parameters('identityPrincipalId')]",
                                "principalType": "ServicePrincipal"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet-aml-compute-01', parameters('pairBaseName')))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-aml-compute-01', parameters('pairBaseName'))), '2020-10-01').outputs.identityPrincipalId.value]"
                    },
                    "storageName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageName.value]"
                    },
                    "storageServiceId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-storage', parameters('pairBaseName'))), '2020-10-01').outputs.storageId.value]"
                    },
                    "computeName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet-aml-compute-01', parameters('pairBaseName'))), '2020-10-01').outputs.compute.value]"
                    },
                    "region": {
                      "type": "string",
                      "value": "[parameters('pairRegion')]"
                    },
                    "vnetName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.name.value]"
                    },
                    "vNetId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('vnetResourceName'))), '2020-10-01').outputs.id.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion')))]"
              ]
            },
            {
              "copy": {
                "name": "wsPLEsInSilosVnet",
                "count": "[length(range(0, variables('siloCount')))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-ws-ple-in-silo{1}', parameters('demoBaseName'), range(0, variables('siloCount'))[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "machineLearningName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))), '2020-10-01').outputs.workspaceName.value]"
                  },
                  "pleRegion": {
                    "value": "[parameters('siloRegions')[range(0, variables('siloCount'))[copyIndex()]]]"
                  },
                  "virtualNetworkName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]])), '2020-10-01').outputs.vnetName.value]"
                  },
                  "virtualNetworkId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]])), '2020-10-01').outputs.vNetId.value]"
                  },
                  "subnetName": {
                    "value": "endpoints"
                  },
                  "linkAcrDnsToVirtualNetwork": {
                    "value": true
                  },
                  "createAcrPLE": {
                    "value": "[not(parameters('applyVNetPeering'))]"
                  },
                  "acrPLEStaticIPs": {
                    "value": "10.0.0.237,10.0.0.236"
                  },
                  "linkKeyvaultDnsToVirtualNetwork": {
                    "value": true
                  },
                  "createKeyVaultPLE": {
                    "value": "[not(parameters('applyVNetPeering'))]"
                  },
                  "keyVaultPLEStaticIP": {
                    "value": "10.0.0.238"
                  },
                  "linkBlobDnsToVirtualNetwork": {
                    "value": false
                  },
                  "createBlobPLE": {
                    "value": "[not(parameters('applyVNetPeering'))]"
                  },
                  "blobPLEStaticIP": {
                    "value": "10.0.0.239"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "11810286320520273315"
                    }
                  },
                  "parameters": {
                    "machineLearningName": {
                      "type": "string",
                      "metadata": {
                        "description": "Machine learning workspace name"
                      }
                    },
                    "pleRegion": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the location of the Azure Machine Learning workspace and dependent resources."
                      }
                    },
                    "virtualNetworkName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of virtual network to add the PLEs"
                      }
                    },
                    "subnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "Subnet name in which to add the PLEs"
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "defaultValue": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Network/virtualNetworks/{2}', subscription().subscriptionId, resourceGroup().name, parameters('virtualNetworkName'))]",
                      "metadata": {
                        "description": "Virtual network ID for the workspace resources PLEs"
                      }
                    },
                    "linkKeyvaultDnsToVirtualNetwork": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Whether to link the private DNS zones to the virtual network"
                      }
                    },
                    "createKeyVaultPLE": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "keyVaultPLEStaticIP": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Static IP address for the KeyVault PLE"
                      }
                    },
                    "linkAcrDnsToVirtualNetwork": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Whether to link the private DNS zones to the virtual network"
                      }
                    },
                    "createAcrPLE": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "acrPLEStaticIPs": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Static IP address for the ACR PLE (needs 1 for registy, one for data)"
                      }
                    },
                    "linkBlobDnsToVirtualNetwork": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Whether to link the private DNS zones to the virtual network"
                      }
                    },
                    "createBlobPLE": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "blobPLEStaticIP": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Static IP address for the workspace blob PLE"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to curate the resources in Azure."
                      }
                    }
                  },
                  "variables": {
                    "subnetId": "[format('{0}/subnets/{1}', parameters('virtualNetworkId'), parameters('subnetName'))]",
                    "keyVaultPrivateDnsZoneName": "[format('privatelink{0}', environment().suffixes.keyvaultDns)]",
                    "acrPrivateDnsZoneName": "[format('privatelink{0}', environment().suffixes.acrLoginServer)]",
                    "blobPrivateDnsZoneName": "[format('privatelink.blob.{0}', environment().suffixes.storage)]"
                  },
                  "resources": [
                    {
                      "condition": "[parameters('linkKeyvaultDnsToVirtualNetwork')]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('keyVaultPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('keyVaultPrivateDnsZoneName'), parameters('pleRegion')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      }
                    },
                    {
                      "condition": "[parameters('linkAcrDnsToVirtualNetwork')]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('acrPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('acrPrivateDnsZoneName'), parameters('pleRegion')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      }
                    },
                    {
                      "condition": "[parameters('linkBlobDnsToVirtualNetwork')]",
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', variables('blobPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('blobPrivateDnsZoneName'), parameters('pleRegion')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('virtualNetworkId')]"
                        }
                      }
                    },
                    {
                      "condition": "[parameters('createKeyVaultPLE')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('ple-{0}-kv-in-vnet-{1}-deploy', parameters('machineLearningName'), parameters('virtualNetworkName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "location": {
                            "value": "[parameters('pleRegion')]"
                          },
                          "resourceServiceId": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName')), '2022-12-01-preview').keyVault]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}-kv-in-vnet-{1}', parameters('machineLearningName'), parameters('virtualNetworkName'))]"
                          },
                          "subnetId": {
                            "value": "[variables('subnetId')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[variables('keyVaultPrivateDnsZoneName')]"
                          },
                          "groupId": {
                            "value": "vault"
                          },
                          "memberNames": {
                            "value": [
                              "default"
                            ]
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('keyVaultPLEStaticIP')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('keyVaultPLEStaticIP')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('keyVaultPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('keyVaultPrivateDnsZoneName'), parameters('pleRegion')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('createAcrPLE')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('ple-{0}-cr-in-vnet-{1}-deploy', parameters('machineLearningName'), parameters('virtualNetworkName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "location": {
                            "value": "[parameters('pleRegion')]"
                          },
                          "resourceServiceId": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName')), '2022-12-01-preview').containerRegistry]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}-cr-in-vnet-{1}', parameters('machineLearningName'), parameters('virtualNetworkName'))]"
                          },
                          "subnetId": {
                            "value": "[variables('subnetId')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[variables('acrPrivateDnsZoneName')]"
                          },
                          "groupId": {
                            "value": "registry"
                          },
                          "memberNames": {
                            "value": [
                              "registry",
                              "[format('registry_data_{0}', reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName')), '2022-12-01-preview', 'full').location)]"
                            ]
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('acrPLEStaticIPs')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('acrPLEStaticIPs')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('acrPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('acrPrivateDnsZoneName'), parameters('pleRegion')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('createBlobPLE')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('ple-{0}-blob-in-vnet-{1}-ple', parameters('machineLearningName'), parameters('virtualNetworkName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "location": {
                            "value": "[parameters('pleRegion')]"
                          },
                          "resourceServiceId": {
                            "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', parameters('machineLearningName')), '2022-12-01-preview').storageAccount]"
                          },
                          "pleRootName": {
                            "value": "[format('ple-{0}-blob-in-vnet-{1}-ple', parameters('machineLearningName'), parameters('virtualNetworkName'))]"
                          },
                          "subnetId": {
                            "value": "[variables('subnetId')]"
                          },
                          "privateDNSZoneName": {
                            "value": "[variables('blobPrivateDnsZoneName')]"
                          },
                          "groupId": {
                            "value": "blob"
                          },
                          "useStaticIPAddress": {
                            "value": "[not(empty(parameters('blobPLEStaticIP')))]"
                          },
                          "privateIPAddress": {
                            "value": "[parameters('blobPLEStaticIP')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.14.85.62628",
                              "templateHash": "9101708035419555637"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]",
                              "metadata": {
                                "description": "Azure region of the deployment"
                              }
                            },
                            "resourceServiceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Service ID of the resource to create private link endpoint to"
                              }
                            },
                            "pleRootName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the storage blob private link endpoint"
                              }
                            },
                            "subnetId": {
                              "type": "string",
                              "metadata": {
                                "description": "Resource ID of the subnet"
                              }
                            },
                            "useStaticIPAddress": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "use privateIPAddress to assign a specific static IP address to PLE"
                              }
                            },
                            "privateIPAddress": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Specify the private IP address on the subnet."
                              }
                            },
                            "privateDNSZoneName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the existing DNS zone to add the PLE to"
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the DNS zone group to add to the PLE"
                              }
                            },
                            "memberNames": {
                              "type": "array",
                              "defaultValue": [
                                "[parameters('groupId')]"
                              ],
                              "metadata": {
                                "description": "Member names to add to the DNS zone group"
                              }
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Tags to add to the resources"
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "staticIPConfigs",
                                "count": "[length(range(0, variables('memberCount')))]",
                                "input": {
                                  "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                                  "properties": {
                                    "groupId": "[parameters('groupId')]",
                                    "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                                    "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                                  }
                                }
                              }
                            ],
                            "memberCount": "[length(parameters('memberNames'))]",
                            "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2022-01-01",
                              "name": "[parameters('pleRootName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[parameters('pleRootName')]",
                                    "properties": {
                                      "groupIds": [
                                        "[parameters('groupId')]"
                                      ],
                                      "privateLinkServiceId": "[parameters('resourceServiceId')]",
                                      "privateLinkServiceConnectionState": {
                                        "status": "Approved",
                                        "description": "Auto-Approved",
                                        "actionsRequired": "None"
                                      }
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[parameters('privateDNSZoneName')]",
                                    "properties": {
                                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('pleRootName')]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('blobPrivateDnsZoneName'), uniqueString(parameters('virtualNetworkId'), variables('blobPrivateDnsZoneName'), parameters('pleRegion')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]]))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]]))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion')))]"
              ]
            },
            {
              "copy": {
                "name": "orchToSiloPrivateEndpoints",
                "count": "[length(range(0, variables('siloCount')))]"
              },
              "condition": "[and(equals(parameters('orchestratorStorageNetworkAccess'), 'private'), not(parameters('applyVNetPeering')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-orch-to-silo{1}-storage-ple', parameters('demoBaseName'), range(0, variables('siloCount'))[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]])), '2020-10-01').outputs.region.value]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "resourceServiceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName'))), '2020-10-01').outputs.storageServiceId.value]"
                  },
                  "pleRootName": {
                    "value": "[format('ple-{0}-to-{1}-silo{2}-st-blob', reference(resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName'))), '2020-10-01').outputs.storageName.value, parameters('demoBaseName'), range(0, variables('siloCount'))[copyIndex()])]"
                  },
                  "subnetId": {
                    "value": "[format('{0}/subnets/endpoints', reference(resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]])), '2020-10-01').outputs.vNetId.value)]"
                  },
                  "useStaticIPAddress": {
                    "value": true
                  },
                  "privateIPAddress": "[if(parameters('applyVNetPeering'), createObject('value', format('10.{0}.0.243', add(range(0, variables('siloCount'))[copyIndex()], 2))), createObject('value', '10.0.0.243'))]",
                  "privateDNSZoneName": {
                    "value": "[format('privatelink.blob.{0}', environment().suffixes.storage)]"
                  },
                  "groupId": {
                    "value": "blob"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "9101708035419555637"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Azure region of the deployment"
                      }
                    },
                    "resourceServiceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Service ID of the resource to create private link endpoint to"
                      }
                    },
                    "pleRootName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the storage blob private link endpoint"
                      }
                    },
                    "subnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the subnet"
                      }
                    },
                    "useStaticIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "use privateIPAddress to assign a specific static IP address to PLE"
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Specify the private IP address on the subnet."
                      }
                    },
                    "privateDNSZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the existing DNS zone to add the PLE to"
                      }
                    },
                    "groupId": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the DNS zone group to add to the PLE"
                      }
                    },
                    "memberNames": {
                      "type": "array",
                      "defaultValue": [
                        "[parameters('groupId')]"
                      ],
                      "metadata": {
                        "description": "Member names to add to the DNS zone group"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to add to the resources"
                      }
                    }
                  },
                  "variables": {
                    "copy": [
                      {
                        "name": "staticIPConfigs",
                        "count": "[length(range(0, variables('memberCount')))]",
                        "input": {
                          "name": "[format('{0}-{1}-{2}-ipconfig', parameters('pleRootName'), parameters('groupId'), parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]",
                          "properties": {
                            "groupId": "[parameters('groupId')]",
                            "memberName": "[parameters('memberNames')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]]]",
                            "privateIPAddress": "[if(empty(parameters('privateIPAddress')), '', variables('privateIPAdresses')[range(0, variables('memberCount'))[copyIndex('staticIPConfigs')]])]"
                          }
                        }
                      }
                    ],
                    "memberCount": "[length(parameters('memberNames'))]",
                    "privateIPAdresses": "[split(parameters('privateIPAddress'), ',')]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2022-01-01",
                      "name": "[parameters('pleRootName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "ipConfigurations": "[if(parameters('useStaticIPAddress'), variables('staticIPConfigs'), createArray())]",
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('pleRootName')]",
                            "properties": {
                              "groupIds": [
                                "[parameters('groupId')]"
                              ],
                              "privateLinkServiceId": "[parameters('resourceServiceId')]",
                              "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                              }
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('pleRootName'), format('{0}-PrivateDnsZoneGroup', parameters('groupId')))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[parameters('privateDNSZoneName')]",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('pleRootName')]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('pleRootName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName')))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]]))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]]))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]]))]"
              ]
            },
            {
              "copy": {
                "name": "siloToOrchPermissions",
                "count": "[length(range(0, variables('siloCount')))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-rw-perms-silo{1}-to-orch', parameters('demoBaseName'), range(0, variables('siloCount'))[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName'))), '2020-10-01').outputs.storageName.value]"
                  },
                  "identityPrincipalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]])), '2020-10-01').outputs.identityPrincipalId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "7765934047439622108"
                    }
                  },
                  "parameters": {
                    "storageAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Full path to storage"
                      }
                    },
                    "identityPrincipalId": {
                      "type": "string",
                      "metadata": {
                        "description": "PrincipalId of the managed identity"
                      }
                    },
                    "computeToStorageRoles": {
                      "type": "array",
                      "defaultValue": [
                        "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                        "81a9662b-bebf-436f-a333-f67b29880f12",
                        "c12c1c16-33a1-487b-954d-41c89c60f349"
                      ],
                      "metadata": {
                        "description": "Role definition IDs for the compute towards the internal storage"
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignments",
                        "count": "[length(parameters('computeToStorageRoles'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
                      "name": "[guid(resourceGroup().id, resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('identityPrincipalId'), parameters('computeToStorageRoles')[copyIndex()])]",
                      "properties": {
                        "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, parameters('computeToStorageRoles')[copyIndex()])]",
                        "principalId": "[parameters('identityPrincipalId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName')))]",
                "silos"
              ]
            },
            {
              "copy": {
                "name": "vNetPeerings",
                "count": "[length(range(0, variables('siloCount')))]"
              },
              "condition": "[parameters('applyVNetPeering')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-vnetpeering-orch-to-silo{1}', parameters('demoBaseName'), range(0, variables('siloCount'))[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "existingVirtualNetworkNameSource": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]])), '2020-10-01').outputs.vnetName.value]"
                  },
                  "existingVirtualNetworkNameTarget": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName'))), '2020-10-01').outputs.vnetName.value]"
                  },
                  "existingVirtualNetworkNameTargetResourceGroupName": {
                    "value": "[resourceGroup().name]"
                  },
                  "useGatewayFromSourceToTarget": {
                    "value": false
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "15289080995677181833"
                    }
                  },
                  "parameters": {
                    "existingVirtualNetworkNameSource": {
                      "type": "string",
                      "metadata": {
                        "description": "Set the local VNet name"
                      }
                    },
                    "existingVirtualNetworkNameTarget": {
                      "type": "string",
                      "metadata": {
                        "description": "Set the remote VNet name"
                      }
                    },
                    "existingVirtualNetworkNameTargetResourceGroupName": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().name]",
                      "metadata": {
                        "description": "Sets the remote VNet Resource group"
                      }
                    },
                    "useGatewayFromSourceToTarget": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "allowVirtualNetworkAccess": {
                      "type": "bool",
                      "defaultValue": true
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2022-01-01",
                      "name": "[format('{0}/peering-to-{1}', parameters('existingVirtualNetworkNameSource'), parameters('existingVirtualNetworkNameTarget'))]",
                      "properties": {
                        "allowVirtualNetworkAccess": "[parameters('allowVirtualNetworkAccess')]",
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": "[parameters('useGatewayFromSourceToTarget')]",
                        "remoteVirtualNetwork": {
                          "id": "[resourceId(parameters('existingVirtualNetworkNameTargetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkNameTarget'))]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2022-01-01",
                      "name": "[format('{0}/peering-to-{1}', parameters('existingVirtualNetworkNameTarget'), parameters('existingVirtualNetworkNameSource'))]",
                      "properties": {
                        "allowVirtualNetworkAccess": "[parameters('allowVirtualNetworkAccess')]",
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": "[parameters('useGatewayFromSourceToTarget')]",
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkNameSource'))]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', split(format('{0}/peering-to-{1}', parameters('existingVirtualNetworkNameSource'), parameters('existingVirtualNetworkNameTarget')), '/')[0], split(format('{0}/peering-to-{1}', parameters('existingVirtualNetworkNameSource'), parameters('existingVirtualNetworkNameTarget')), '/')[1])]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName')))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]]))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex()]]))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-kv-confidentiality', parameters('demoBaseName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('confidentialityKeyVaultName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "region": {
                    "value": "[parameters('orchestratorRegion')]"
                  },
                  "identitiesEnabledCryptoOperations": {
                    "copy": [
                      {
                        "name": "value",
                        "count": "[length(range(0, variables('siloCount')))]",
                        "input": "[format('{0}', reference(resourceId('Microsoft.Resources/deployments', format('{0}-silo-{1}-pair', parameters('demoBaseName'), range(0, variables('siloCount'))[range(0, variables('siloCount'))[copyIndex('value')]])), '2020-10-01').outputs.identityPrincipalId.value)]"
                      }
                    ]
                  },
                  "secondaryIdentitiesEnabledCryptoOperations": {
                    "value": [
                      "[format('{0}', reference(resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName'))), '2020-10-01').outputs.identityPrincipalId.value)]"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.85.62628",
                      "templateHash": "16858202248000565148"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the keyvault."
                      }
                    },
                    "region": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Region of the keyvault."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Tags to curate the resources in Azure."
                      }
                    },
                    "identitiesEnabledCryptoOperations": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of principal ids that will be allowed cryptographic operations (Key Vault Crypto User)."
                      }
                    },
                    "secondaryIdentitiesEnabledCryptoOperations": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Just in case you need a second list of identities as argument."
                      }
                    },
                    "createDevRSAKey": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "devKeyName": {
                      "type": "string",
                      "defaultValue": "dev-rsa-key"
                    }
                  },
                  "variables": {
                    "keyVaultCryptoUserRoleId": "12338af0-0e69-4776-bea7-57ae8d297424"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2022-07-01",
                      "name": "[parameters('keyVaultName')]",
                      "location": "[parameters('region')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "tenantId": "[subscription().tenantId]",
                        "sku": {
                          "name": "standard",
                          "family": "A"
                        },
                        "createMode": "default",
                        "enablePurgeProtection": true,
                        "enableSoftDelete": true,
                        "enableRbacAuthorization": true,
                        "publicNetworkAccess": "Enabled",
                        "accessPolicies": [],
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": true,
                        "enabledForTemplateDeployment": false
                      }
                    },
                    {
                      "condition": "[parameters('createDevRSAKey')]",
                      "type": "Microsoft.KeyVault/vaults/keys",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('devKeyName'))]",
                      "properties": {
                        "kty": "RSA",
                        "keyOps": [
                          "encrypt",
                          "decrypt",
                          "sign",
                          "verify"
                        ],
                        "keySize": 2048
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "roleAssignments",
                        "count": "[length(parameters('identitiesEnabledCryptoOperations'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
                      "name": "[guid(resourceGroup().id, parameters('keyVaultName'), parameters('identitiesEnabledCryptoOperations')[copyIndex()], variables('keyVaultCryptoUserRoleId'))]",
                      "properties": {
                        "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, variables('keyVaultCryptoUserRoleId'))]",
                        "principalId": "[parameters('identitiesEnabledCryptoOperations')[copyIndex()]]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "secondaryRoleAssignments",
                        "count": "[length(parameters('secondaryIdentitiesEnabledCryptoOperations'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
                      "name": "[guid(resourceGroup().id, parameters('keyVaultName'), parameters('secondaryIdentitiesEnabledCryptoOperations')[copyIndex()], variables('keyVaultCryptoUserRoleId'))]",
                      "properties": {
                        "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, variables('keyVaultCryptoUserRoleId'))]",
                        "principalId": "[parameters('secondaryIdentitiesEnabledCryptoOperations')[copyIndex()]]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-orchestrator-pair', parameters('demoBaseName')))]",
                "silos"
              ]
            }
          ],
          "outputs": {
            "workspaceSecretStoreId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))), '2020-10-01').outputs.workspaceSecretStoreId.value]"
            },
            "workspaceSecretStoreName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-aml-{1}', parameters('demoBaseName'), parameters('orchestratorRegion'))), '2020-10-01').outputs.workspaceSecretStoreName.value]"
            }
          }
        }
      }
    }
  ]
}