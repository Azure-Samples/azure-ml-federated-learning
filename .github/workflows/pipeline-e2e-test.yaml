name: End-to-end-pipeline-test

on:
  pull_request:
    branches:
    - main
    paths:
    - mlops/**
    - examples/components/**
    - examples/pipelines/**

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  arm-template-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Test open sandbox ARM template
      uses: ./.github/actions/bicep-to-arm-template-diff
      with:
        source-file-path: "mlops/bicep/open_sandbox_setup.bicep"
        target-file-path: "mlops/arm/open_sandbox_setup.json"

    - name: Test vnet publicip sandbox ARM template
      uses: ./.github/actions/bicep-to-arm-template-diff
      with:
        source-file-path: "mlops/bicep/vnet_publicip_sandbox_setup.bicep"
        target-file-path: "mlops/arm/vnet_publicip_sandbox_setup.json"

    - name: Test open compute storage pair ARM template
      uses: ./.github/actions/bicep-to-arm-template-diff
      with:
        source-file-path: "mlops/bicep/modules/fl_pairs/open_compute_storage_pair.bicep"
        target-file-path: "mlops/arm/open_compute_storage_pair.json"

    - name: Test vnet compute storage pair ARM template
      uses: ./.github/actions/bicep-to-arm-template-diff
      with:
        source-file-path: "mlops/bicep/modules/fl_pairs/vnet_compute_storage_pair.bicep"
        target-file-path: "mlops/arm/vnet_compute_storage_pair.json"

    - name: Test vnet compute pair with existing storage ARM template
      uses: ./.github/actions/bicep-to-arm-template-diff
      with:
        source-file-path: "mlops/bicep/modules/fl_pairs/vnet_compute_existing_storage.bicep"
        target-file-path: "mlops/arm/vnet_compute_existing_storage.json"

    - name: Test open aks confcomp storage pair ARM template
      uses: ./.github/actions/bicep-to-arm-template-diff
      with:
        source-file-path: "mlops/bicep/modules/fl_pairs/open_aks_with_confcomp_storage_pair.bicep"
        target-file-path: "mlops/arm/open_aks_with_confcomp_storage_pair.json"

    - name: Test jumpbox ARM template
      uses: ./.github/actions/bicep-to-arm-template-diff
      with:
        source-file-path: "mlops/bicep/modules/resources/jumpbox_cc.bicep"
        target-file-path: "mlops/arm/jumpbox_cc.json"

  open-sandbox-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Provision resources
      uses: ./.github/actions/provision-resources
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        deployment-file-path: ./mlops/bicep/open_sandbox_setup.bicep
        deployment-name: open_sandbox_${{ github.run_attempt }}${{ github.run_id }}
        demo-base-name: fl1${{ github.run_attempt }}${{ github.run_id }}
        github-sp-object-id: ${{ secrets.CI_CD_SP_OBJECT_ID }}
        kaggle-username: ${{ secrets.KAGGLE_USERNAME }}
        kaggle-api-token: ${{ secrets.KAGGLE_API_TOKEN }}

  open-sandbox-literal-helloworld-test:
    needs: open-sandbox-test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit Helloworld example using the literal code
      uses: ./.github/actions/submit-aml-literal-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl1${{ github.run_attempt }}${{ github.run_id }}
        example: HELLOWORLD

  open-sandbox-literal-mnist-test:
    needs: open-sandbox-literal-helloworld-test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit MNIST example using the literal code
      uses: ./.github/actions/submit-aml-literal-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl1${{ github.run_attempt }}${{ github.run_id }}
        example: MNIST

  open-sandbox-factory-helloworld-test:
    needs: open-sandbox-test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:

    - uses: actions/checkout@v2

    - name: Submit Helloworld example using the factory code
      uses: ./.github/actions/submit-aml-factory-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl1${{ github.run_attempt }}${{ github.run_id }}
        example: HELLOWORLD

  open-sandbox-factory-mnist-test:
    needs: open-sandbox-factory-helloworld-test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit MNIST example using the factory code
      uses: ./.github/actions/submit-aml-factory-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl1${{ github.run_attempt }}${{ github.run_id }}
        example: MNIST

  open-sandbox-pneumonia-test:
    runs-on: ubuntu-latest
    needs: open-sandbox-literal-helloworld-test
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit the PNEUMONIA upload data pipeline
      uses: ./.github/actions/submit-upload-data-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl1${{ github.run_attempt }}${{ github.run_id }}
        example: PNEUMONIA

    - name: Submit the PNEUMONIA example pipeline
      uses: ./.github/actions/submit-example-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl1${{ github.run_attempt }}${{ github.run_id }}
        example: pneumonia

  open-sandbox-ner-test:
    runs-on: ubuntu-latest
    needs: open-sandbox-literal-helloworld-test
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit the NER upload data pipeline
      uses: ./.github/actions/submit-upload-data-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl1${{ github.run_attempt }}${{ github.run_id }}
        example: NER

    - name: Submit the NER example pipeline
      uses: ./.github/actions/submit-example-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl1${{ github.run_attempt }}${{ github.run_id }}
        example: ner

  open-sandbox-ccfraud-test:
    runs-on: ubuntu-latest
    needs: open-sandbox-literal-helloworld-test
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit the CCFRAUD upload data pipeline
      uses: ./.github/actions/submit-upload-data-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl1${{ github.run_attempt }}${{ github.run_id }}
        example: CCFRAUD

    - name: Submit the CCFRAUD example pipeline
      uses: ./.github/actions/submit-example-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: open-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl1${{ github.run_attempt }}${{ github.run_id }}
        example: ccfraud

  vnet-sandbox-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:

    - uses: actions/checkout@v2

    - name: Provision resources
      uses: ./.github/actions/provision-resources
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: vnet-${{ secrets.RESOURCE_GROUP_TMP }}
        deployment-file-path: ./mlops/bicep/vnet_publicip_sandbox_setup.bicep
        deployment-name: vnet_sandbox_${{ github.run_attempt }}${{ github.run_id }}
        demo-base-name: fl2${{ github.run_attempt }}${{ github.run_id }}
        github-sp-object-id: ${{ secrets.CI_CD_SP_OBJECT_ID }}
        kaggle-username: ${{ secrets.KAGGLE_USERNAME }}
        kaggle-api-token: ${{ secrets.KAGGLE_API_TOKEN }}

  vnet-sandbox-literal-helloworld-test:
    needs: vnet-sandbox-test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit Helloworld example using the literal code
      uses: ./.github/actions/submit-aml-literal-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: vnet-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl2${{ github.run_attempt }}${{ github.run_id }}
        example: HELLOWORLD

  vnet-sandbox-literal-mnist-test:
    needs: vnet-sandbox-literal-helloworld-test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit MNIST example using the literal code
      uses: ./.github/actions/submit-aml-literal-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: vnet-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl2${{ github.run_attempt }}${{ github.run_id }}
        example: MNIST

  vnet-sandbox-factory-helloworld-test:
    needs: vnet-sandbox-test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit Helloworld example using the factory code
      uses: ./.github/actions/submit-aml-factory-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: vnet-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl2${{ github.run_attempt }}${{ github.run_id }}
        example: HELLOWORLD

  vnet-sandbox-factory-mnist-test:
    needs: vnet-sandbox-factory-helloworld-test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit MNIST example using the factory code
      uses: ./.github/actions/submit-aml-factory-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: vnet-${{ secrets.RESOURCE_GROUP_TMP }}
        workspace-name: aml-fl2${{ github.run_attempt }}${{ github.run_id }}
        example: MNIST

  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      components-utils: ${{ steps.filter.outputs.components-utils }}
      components-pneumonia: ${{ steps.filter.outputs.components-pneumonia }}
      components-ner: ${{ steps.filter.outputs.components-ner }}
      components-ccfraud: ${{ steps.filter.outputs.components-ccfraud }}
      pneumonia: ${{ steps.filter.outputs.pneumonia }}
      ner: ${{ steps.filter.outputs.ner }}
      ccfraud: ${{ steps.filter.outputs.ccfraud }}
      utils-upload-data: ${{ steps.filter.outputs.utils-upload-data }}
      pneumonia-upload-data: ${{ steps.filter.outputs.pneumonia-upload-data }}
      ner-upload-data: ${{ steps.filter.outputs.ner-upload-data }}
      ccfraud-upload-data: ${{ steps.filter.outputs.ccfraud-upload-data }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          components-utils:
            - 'examples/components/utils/**'
          components-pneumonia:
            - 'examples/components/PNEUMONIA/**'
          components-ner:
            - 'examples/components/NER/**'
          components-ccfraud:
            - 'examples/components/CCFRAUD/**'
          pneumonia:
            - 'examples/pipelines/pneumonia/**'
          ner:
            - 'examples/pipelines/ner/**'
          ccfraud:
            - 'examples/pipelines/ccfraud/**'
          utils-upload-data:
            - 'examples/pipelines/utils/upload_data/**'
          pneumonia-upload-data:
            - 'examples/components/PNEUMONIA/upload_data/**'
          ner-upload-data:
            - 'examples/components/NER/upload_data/**'
          ccfraud-upload-data:
            - 'examples/components/CCFRAUD/upload_data/**'

  pneumonia-test:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: ${{ (needs.paths-filter.outputs.utils-upload-data == 'true') || (needs.paths-filter.outputs.pneumonia-upload-data == 'true') || (needs.paths-filter.outputs.components-pneumonia == 'true') || (needs.paths-filter.outputs.pneumonia == 'true') || (needs.paths-filter.outputs.components-utils == 'true') }} 
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit the PNEUMONIA upload data pipeline
      uses: ./.github/actions/submit-upload-data-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        workspace-name: ${{ secrets.AML_WORKSPACE_NAME }}
        example: PNEUMONIA

    - name: Submit the PNEUMONIA example pipeline
      uses: ./.github/actions/submit-example-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        workspace-name: ${{ secrets.AML_WORKSPACE_NAME }}
        example: pneumonia

  ner-test:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: ${{ (needs.paths-filter.outputs.utils-upload-data == 'true') || (needs.paths-filter.outputs.ner-upload-data == 'true') || (needs.paths-filter.outputs.components-ner == 'true') || (needs.paths-filter.outputs.ner == 'true') || (needs.paths-filter.outputs.components-utils == 'true') }} 
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit the NER upload data pipeline
      uses: ./.github/actions/submit-upload-data-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        workspace-name: ${{ secrets.AML_WORKSPACE_NAME }}
        example: NER

    - name: Submit the NER example pipeline
      uses: ./.github/actions/submit-example-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        workspace-name: ${{ secrets.AML_WORKSPACE_NAME }}
        example: ner

  ccfraud-test:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: ${{ (needs.paths-filter.outputs.utils-upload-data == 'true') || (needs.paths-filter.outputs.ccfraud-upload-data == 'true') || (needs.paths-filter.outputs.components-ccfraud == 'true') || (needs.paths-filter.outputs.ccfraud == 'true') || (needs.paths-filter.outputs.components-utils == 'true') }} 
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v2

    - name: Submit the CCFRAUD upload data pipeline
      uses: ./.github/actions/submit-upload-data-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        workspace-name: ${{ secrets.AML_WORKSPACE_NAME }}
        example: CCFRAUD

    - name: Submit the CCFRAUD example pipeline
      uses: ./.github/actions/submit-example-pipeline
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        workspace-name: ${{ secrets.AML_WORKSPACE_NAME }}
        example: ccfraud